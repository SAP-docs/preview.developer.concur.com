{
  "x-sap-shortText": "Manages the relationship between attendees and expense entries.",
  "swagger": "2.0",
  "host": "www.concursolutions.com",
  "basePath": "/api/v3.0",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "securityDefinitions": {
		"OAuth2": {
			"type": "oauth2",
			"description": "To use this API, you need to get OAuth client credentials (client ID, secret, and geolocation) from SAP Concur, and be authorized to use the relevant scope. Refer to the <a href=\"https://developer.concur.com/api-reference/authentication/getting-started.html\">full authentication information</a> for more information.",
			"tokenUrl": "https://us.api.concursolutions.com/oauth2/v0",
			"flow": "application"
		}
	},
  "security": [
		{
			"OAuth2": []
		}
	],
  "info": {
    "title": "Entry Attendee Associations",
    "description": "Manage the relationship between the attendees and the expense report and entry, for the specified expense entry. This resource does not include the full attendee information, which can be accessed using the Attendees resource. This API provides methods to view, create, update, and delete entry attendee associations.",
    "version": "3.0"
  },
  "tags": [
    {
      "name": "Resources",
      "description": ""
    }
  ],
  "paths": {
    "/expense/entryattendeeassociations": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get all entry-attendee associations",
        "description": "Gets all entry-attendee associations owned by the user. These are the associations between an expense entry and an attendee.",
        "parameters": [
          {
            "name": "entryID",
            "in": "query",
            "description": "The ID of the entry for which to retrieve entry-attendee associations.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The starting point of the next set of results, after the limit specified in the limit field has been reached.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of records to return. Default value: 25",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "user",
            "in": "query",
            "description": "The login ID of the user who owns this entry-attendee association. The user must have the Web Services Admin role to use this parameter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EntryAttendeeAssociationCollection"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Resources"
        ],
        "summary": "Create entry-attendee association",
        "description": "Creates a new association between an expense entry and an attendee.",
        "parameters": [
          {
            "name": "content",
            "in": "body",
            "description": "The EntryAttendeeAssociation object to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntryAttendeeAssociationPost"
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "The login ID of the user who owns this entry-attendee association. The user must have the Web Services Admin role to use this parameter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Void"
            }
          }
        }
      }
    },
    "/expense/entryattendeeassociations/{id}": {
      "get": {
        "tags": [
          "Resources"
        ],
        "summary": "Get a single entry-attendee association",
        "description": "Gets the specified entry-attendee association.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entry-attendee association.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "description": "The login ID of the user who owns this entry-attendee association. The user must have the Web Services Admin role to use this parameter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EntryAttendeeAssociationGet"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Resources"
        ],
        "summary": "Update an entry-attendee association",
        "description": "Updates the specified entry-attendee association. Only the fields provided in the supplied object will be updated. Missing fields will not be altered.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entry-attendee association.",
            "required": true,
            "type": "string"
          },
          {
            "name": "content",
            "in": "body",
            "description": "The partial or complete EntryAttendeeAssociation object to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EntryAttendeeAssociationPut"
            }
          },
          {
            "name": "user",
            "in": "query",
            "description": "The login ID of the user who owns this entry-attendee association. The user must have the Web Services Admin role to use this parameter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Void"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Void"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Resources"
        ],
        "summary": "Delete an entry-attendee association",
        "description": "Deletes the specified entry-attendee association.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the entry-attendee association to delete.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "description": "The login ID of the user who owns this entry-attendee association. The user must have the Web Services Admin role to use this parameter.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Void"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Void"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateResponse": {
      "properties": {
        "ID": {
          "type": "string"
        },
        "URI": {
          "type": "string"
        }
      }
    },
    "EntryAttendeeAssociationCollection": {
      "properties": {
        "Items": {
          "$ref": "#/definitions/EntryAttendeeAssociationGet"
        },
        "NextPage": {
          "type": "string",
          "description": "The URI of the next page of results, if any."
        }
      }
    },
    "EntryAttendeeAssociationGet": {
      "properties": {
        "Amount": {
          "type": "number",
          "format": "double",
          "description": "The portion of the entry transaction amount assigned to this attendee."
        },
        "AssociatedAttendeeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of additional attendees associated with this attendee. A count greater than 1 means there are unnamed attendees associated with this attendee."
        },
        "AttendeeID": {
          "type": "string",
          "description": "The unique identifier of the associated attendee. To obtain the attendee ID value, use the \"GET /expense/attendees\" endpoint."
        },
        "Custom1": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom2": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom3": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom4": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom5": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "EntryID": {
          "type": "string",
          "description": "The unique identifier of the associated entry. To obtain the attendee ID value, use the \"GET /expense/entries\" endpoint."
        },
        "ID": {
          "type": "string",
          "description": "The unique identifier of the resource."
        },
        "URI": {
          "type": "string",
          "description": "The URI to the resource."
        }
      }
    },
    "EntryAttendeeAssociationPost": {
      "properties": {
        "Amount": {
          "type": "number",
          "format": "double",
          "description": "The portion of the entry transaction amount assigned to this attendee."
        },
        "AssociatedAttendeeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of additional attendees associated with this attendee. A count greater than 1 means there are unnamed attendees associated with this attendee."
        },
        "AttendeeID": {
          "type": "string",
          "description": "The unique identifier of the associated attendee. To obtain the attendee ID value, use the \"GET /expense/attendees\" endpoint."
        },
        "Custom1": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom2": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom3": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom4": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom5": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "EntryID": {
          "type": "string",
          "description": "The unique identifier of the associated entry. To obtain the attendee ID value, use the \"GET /expense/entries\" endpoint. The value of the ID element in the response is the entry ID. "
        }
      }
    },
    "EntryAttendeeAssociationPut": {
      "properties": {
        "Amount": {
          "type": "number",
          "format": "double",
          "description": "The portion of the entry transaction amount assigned to this attendee."
        },
        "AssociatedAttendeeCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of additional attendees associated with this attendee. A count greater than 1 means there are unnamed attendees associated with this attendee."
        },
        "Custom1": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom2": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom3": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom4": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        },
        "Custom5": {
          "type": "string",
          "description": "The details from the Custom fields. These fields may not have data, depending on the configuration."
        }
      }
    },
    "Void": {
      "properties": {}
    }
  },
  "x-servers": [
    {
      "url": "https://www.concursolutions.com/api/v3.0",
      "description": "Concur API EndPoint"
    }
  ]
}
