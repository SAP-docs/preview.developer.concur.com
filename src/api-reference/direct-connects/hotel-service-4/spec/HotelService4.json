{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "name" : "Concur Developer Center Support",
      "url" : "https://developer.concur.com/tools-support/support.html"
    },
    "description" : "## Introduction\nHotelService API provides a method for Custom Hotel Source vendors to provide hotel inventory, rates and booking related functionality to users of Concur OBT (Online Booking Tool). \n\nOnce the Hotel Supplier has developed and certified their API implementation with SAP Concur, their inventory will begin appearing in hotel searches by opted-in Travel users.\n",
    "title" : "HotelService API",
    "version" : "4.0-alpha"
  },
  "servers" : [ {
    "description" : "hs mock server",
    "url" : "https://hs-mock.service.cnqr.tech"
  } ],
  "security" : [ {
    "BasicAuth" : [ ]
  } ],
  "tags" : [ {
    "description" : "Hotel workflow endpoints",
    "name" : "service"
  } ],
  "paths" : {
    "/hotels/search" : {
      "post" : {
        "description" : "Perform the initial search for hotels.",
        "operationId" : "search",
        "parameters" : [ {
          "explode" : false,
          "in" : "header",
          "name" : "Accept-Language",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "header",
          "name" : "concur-correlationid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchCriteria"
              }
            }
          },
          "description" : "Hotel search criteria",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResponse"
                }
              }
            },
            "description" : "Search results that meet criteria"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Invalid client request. Request shouldn't be retried without changing it."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Error while processing the request. Request can be retried as is at a later time."
          },
          "401" : {
            "description" : "Unauthorized"
          }
        },
        "summary" : "Perform the initial search for hotels.",
        "tags" : [ "service" ]
      }
    },
    "/hotels/rates" : {
      "post" : {
        "description" : "Retrieve hotel rates",
        "operationId" : "rates",
        "parameters" : [ {
          "explode" : false,
          "in" : "header",
          "name" : "Accept-Language",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "This unique code can be used during troubleshooting as it identifies the API call in the log files.",
          "explode" : false,
          "in" : "header",
          "name" : "concur-correlationid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RatesCriteria"
              }
            }
          },
          "description" : "Hotel rates criteria",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RatesResponse"
                }
              }
            },
            "description" : "Hotel rates for requested properties"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Invalid client request. Request shouldn't be retried without changing it."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Error while processing the request. Request can be retried as is at a later time."
          },
          "401" : {
            "description" : "Unauthorized"
          }
        },
        "summary" : "Retrieve rates for specific hotel properties",
        "tags" : [ "service" ]
      }
    },
    "/hotels/ratedetails" : {
      "post" : {
        "description" : "Retrieve details for rates of a property including guarantee, cancel penalty and nightly price breakdown - required if these details are missing from /hotels/rates call",
        "operationId" : "ratedetails",
        "parameters" : [ {
          "explode" : false,
          "in" : "header",
          "name" : "Accept-Language",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "This unique code can be used during troubleshooting as it identifies the API call in the log files.",
          "explode" : false,
          "in" : "header",
          "name" : "concur-correlationid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RateDetailsCriteria"
              }
            }
          },
          "description" : "Hotel rates criteria",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RateDetailsResponse"
                }
              }
            },
            "description" : "Hotel rates for requested properties"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Invalid client request. Request shouldn't be retried without changing it."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Error while processing the request. Request can be retried as is at a later time."
          },
          "401" : {
            "description" : "Unauthorized"
          }
        },
        "summary" : "Retrieve hotel rate details",
        "tags" : [ "service" ]
      }
    },
    "/hotels/details" : {
      "post" : {
        "description" : "Retrieve hotel property information",
        "operationId" : "hoteldetails",
        "parameters" : [ {
          "explode" : false,
          "in" : "header",
          "name" : "Accept-Language",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "This unique code can be used during troubleshooting as it identifies the API call in the log files.",
          "explode" : false,
          "in" : "header",
          "name" : "concur-correlationid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HotelDetailsCriteria"
              }
            }
          },
          "description" : "Hotel details criteria",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HotelDetailsResponse"
                }
              }
            },
            "description" : "Hotel descriptive info for requested properties"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Invalid client request. Request shouldn't be retried without changing it."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Error while processing the request. Request can be retried as is at a later time."
          },
          "401" : {
            "description" : "Unauthorized"
          }
        },
        "summary" : "Retrieve descriptive details about specified hotels.",
        "tags" : [ "service" ]
      }
    },
    "/hotels/reservation" : {
      "post" : {
        "description" : "Reserve hotel rate",
        "operationId" : "reservation",
        "parameters" : [ {
          "explode" : false,
          "in" : "header",
          "name" : "Accept-Language",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "This unique code can be used during troubleshooting as it identifies the API call in the log files.",
          "explode" : false,
          "in" : "header",
          "name" : "concur-correlationid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReservationCriteria"
              }
            }
          },
          "description" : "Reservation criteria",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationDetails"
                }
              }
            },
            "description" : "Hotel reservation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Invalid client request. Request shouldn't be retried without changing it."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Error while processing the request. Request can be retried as is at a later time."
          },
          "401" : {
            "description" : "Unauthorized"
          }
        },
        "summary" : "Reserve the given hotel rate",
        "tags" : [ "service" ]
      }
    },
    "/hotels/reservation/read" : {
      "post" : {
        "description" : "Read reservation details. Used in a process of reserving a hotel to acknowledge receipt of booking confirmation as well as write information to Itinerary. Not invoked by user, but by automatic Concur process. Hotel Supplier should reply with the same response as provided for the book response.\n",
        "operationId" : "read",
        "parameters" : [ {
          "explode" : false,
          "in" : "header",
          "name" : "Accept-Language",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "This unique code can be used during troubleshooting as it identifies the API call in the log files.",
          "explode" : false,
          "in" : "header",
          "name" : "concur-correlationid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ReadCriteria"
              }
            }
          },
          "description" : "Read itinerary criteria",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationDetails"
                }
              }
            },
            "description" : "Successful read itinerary"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Invalid client request. Request shouldn't be retried without changing it."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Error while processing the request. Request can be retried as is at a later time."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Reservation record not found"
          }
        },
        "summary" : "Returns detailed information about a hotel reservation.",
        "tags" : [ "service" ]
      }
    },
    "/hotels/reservation/modify" : {
      "post" : {
        "description" : "Modify given reservation",
        "operationId" : "modify",
        "parameters" : [ {
          "explode" : false,
          "in" : "header",
          "name" : "Accept-Language",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "This unique code can be used during troubleshooting as it identifies the API call in the log files.",
          "explode" : false,
          "in" : "header",
          "name" : "concur-correlationid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModifyCriteria"
              }
            }
          },
          "description" : "Modify reservation criteria",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ReservationDetails"
                }
              }
            },
            "description" : "Reservation succeessfully modified"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Invalid client request. Request shouldn't be retried without changing it."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Error while processing the request. Request can be retried as is at a later time."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Reservation record not found"
          },
          "501" : {
            "description" : "Endpoint not implemented"
          }
        },
        "summary" : "Modify specific reservation",
        "tags" : [ "service" ]
      }
    },
    "/hotels/reservation/cancel" : {
      "post" : {
        "description" : "Cancel specified reservation",
        "operationId" : "cancel",
        "parameters" : [ {
          "explode" : false,
          "in" : "header",
          "name" : "Accept-Language",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "This unique code can be used during troubleshooting as it identifies the API call in the log files.",
          "explode" : false,
          "in" : "header",
          "name" : "concur-correlationid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CancelCriteria"
              }
            }
          },
          "description" : "Cancel reservation criteria",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CancelDetails"
                }
              }
            },
            "description" : "Reservation successfully cancelled"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Invalid client request. Request shouldn't be retried without changing it."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Error while processing the request. Request can be retried as is at a later time."
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Reservation record not found"
          }
        },
        "summary" : "Cancel specified reservation",
        "tags" : [ "service" ]
      }
    }
  },
  "components" : {
    "responses" : {
      "BadRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        },
        "description" : "Invalid client request. Request shouldn't be retried without changing it."
      },
      "ProcessingError" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        },
        "description" : "Error while processing the request. Request can be retried as is at a later time."
      }
    },
    "schemas" : {
      "SearchCriteria" : {
        "description" : "Search by either location or exact property reference if already available",
        "properties" : {
          "requestorInfo" : {
            "$ref" : "#/components/schemas/RequestorInfo"
          },
          "numGuests" : {
            "default" : 1,
            "description" : "No. of guests for accomodation as entered by traveler",
            "format" : "int32",
            "type" : "integer"
          },
          "guestCountryCode" : {
            "description" : "Two-character ISO code (ISO ALPHA-2) for country",
            "example" : "CA",
            "type" : "string"
          },
          "locationSearch" : {
            "$ref" : "#/components/schemas/LocationSearch"
          },
          "hotelPropertyRefs" : {
            "description" : "Reference Ids to hotel properties if we already have them. When provided 'locationSearch'  will not be used and may not be set.",
            "items" : {
              "$ref" : "#/components/schemas/HotelPropertyRef"
            },
            "type" : "array"
          },
          "checkin" : {
            "description" : "Check in date as entered by traveler",
            "example" : "2021-10-20",
            "format" : "date",
            "type" : "string"
          },
          "checkout" : {
            "description" : "Check out date as entered by traveler",
            "example" : "2021-10-23",
            "format" : "date",
            "type" : "string"
          },
          "customFields" : {
            "description" : "Custom fields that are supported by vendor (e.g. CostCenter)",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "includeDepositRequired" : {
            "description" : "Whether to include properties where deposit is required or not",
            "type" : "boolean"
          },
          "rateCategories" : {
            "description" : "Special rate categories requested if applicable",
            "items" : {
              "$ref" : "#/components/schemas/RateCategory"
            },
            "type" : "array"
          },
          "maxSearchResults" : {
            "default" : 100,
            "description" : "Maximum number of properties allowed to be included in search results",
            "example" : 100,
            "type" : "integer"
          }
        },
        "required" : [ "checkin", "checkout", "includeDepositRequired", "requestorInfo" ],
        "type" : "object"
      },
      "LocationSearch" : {
        "description" : "Reference to location details for search",
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/Location"
          },
          "radius" : {
            "$ref" : "#/components/schemas/Radius"
          },
          "maxRadius" : {
            "$ref" : "#/components/schemas/Radius"
          }
        },
        "required" : [ "location", "maxRadius", "radius" ],
        "type" : "object"
      },
      "RatesCriteria" : {
        "properties" : {
          "requestorInfo" : {
            "$ref" : "#/components/schemas/RequestorInfo"
          },
          "hotelPropertyRefs" : {
            "description" : "Reference Ids to hotel properties for which rate is requested",
            "items" : {
              "$ref" : "#/components/schemas/HotelPropertyRef"
            },
            "type" : "array"
          },
          "checkin" : {
            "description" : "Check in date as entered by traveler",
            "example" : "2021-10-20",
            "format" : "date",
            "type" : "string"
          },
          "checkout" : {
            "description" : "Check out date as entered by traveler",
            "example" : "2021-10-23",
            "format" : "date",
            "type" : "string"
          },
          "rateCategories" : {
            "description" : "Special rate categories requested if applicable",
            "items" : {
              "$ref" : "#/components/schemas/RateCategory"
            },
            "type" : "array"
          },
          "numGuests" : {
            "default" : 1,
            "description" : "No. of guests for accomodation",
            "format" : "int32",
            "type" : "integer"
          },
          "guestCountryCode" : {
            "description" : "Two-character ISO code (ISO ALPHA-2) for country",
            "example" : "CA",
            "type" : "string"
          },
          "searchSessionToken" : {
            "$ref" : "#/components/schemas/SearchSessionToken"
          }
        },
        "required" : [ "checkin", "checkout", "hotelPropertyRefs", "requestorInfo" ],
        "type" : "object"
      },
      "RateDetailsCriteria" : {
        "properties" : {
          "requestorInfo" : {
            "$ref" : "#/components/schemas/RequestorInfo"
          },
          "hotelPropertyRef" : {
            "$ref" : "#/components/schemas/HotelPropertyRef"
          },
          "ratePlanIds" : {
            "description" : "Rate Product Ids for which detail rates are requested",
            "items" : {
              "example" : "44SM3FAsfvgcZs9ehGlNOQ",
              "type" : "string"
            },
            "type" : "array"
          },
          "checkin" : {
            "description" : "Check in date as entered by traveler",
            "example" : "2021-10-20",
            "format" : "date",
            "type" : "string"
          },
          "checkout" : {
            "description" : "Check out date as entered by traveler",
            "example" : "2021-10-23",
            "format" : "date",
            "type" : "string"
          },
          "rateCategories" : {
            "description" : "Special rate categories requested if applicable. Rate category is a value used to request a particular rate code if the guest qualifies for a special rate, such as AARP, AAA or a corporate rate. Uses RPT OTA code type.",
            "items" : {
              "$ref" : "#/components/schemas/RateCategory"
            },
            "type" : "array"
          },
          "numGuests" : {
            "default" : 1,
            "description" : "No. of guests for accomodation as entered by traveler",
            "format" : "int32",
            "type" : "integer"
          },
          "guestCountryCode" : {
            "description" : "Two-character ISO code (ISO ALPHA-2) for country",
            "example" : "CA",
            "type" : "string"
          },
          "searchSessionToken" : {
            "$ref" : "#/components/schemas/SearchSessionToken"
          }
        },
        "required" : [ "checkin", "checkout", "hotelPropertyRef", "ratePlanIds", "requestorInfo" ],
        "type" : "object"
      },
      "HotelDetailsCriteria" : {
        "properties" : {
          "requestorInfo" : {
            "$ref" : "#/components/schemas/RequestorInfo"
          },
          "hotelCodes" : {
            "description" : "Reference Ids to hotel properties for which rate is requested",
            "items" : {
              "$ref" : "#/components/schemas/HotelPropertyRef"
            },
            "type" : "array"
          },
          "searchSessionToken" : {
            "$ref" : "#/components/schemas/SearchSessionToken"
          }
        },
        "required" : [ "hotelCodes", "requestorInfo" ],
        "type" : "object"
      },
      "CustomField" : {
        "description" : "Vendor supported custom field",
        "properties" : {
          "name" : {
            "description" : "Name of the custom field",
            "example" : "OrgUnit",
            "type" : "string"
          },
          "value" : {
            "description" : "Value of the custom field",
            "example" : "Travel Agents",
            "type" : "string"
          }
        },
        "required" : [ "name", "value" ],
        "type" : "object"
      },
      "HotelPropertyRef" : {
        "description" : "Reference to hotel property using provider specific property code",
        "properties" : {
          "chainCode" : {
            "description" : "Chain code associated with hotel if any",
            "example" : "HH",
            "type" : "string"
          },
          "propertyCode" : {
            "description" : "Provider's property code as given in search response",
            "example" : "HH498949",
            "type" : "string"
          }
        },
        "required" : [ "propertyCode" ],
        "type" : "object"
      },
      "HotelProperty" : {
        "description" : "Hotel property object returned by hotel search",
        "properties" : {
          "propertyCode" : {
            "$ref" : "#/components/schemas/PropertyCode"
          },
          "altPropertyCode" : {
            "$ref" : "#/components/schemas/HotelProperty_altPropertyCode"
          },
          "chainCode" : {
            "description" : "Chain code associated with hotel if any",
            "example" : "HH",
            "type" : "string"
          },
          "superChainCode" : {
            "example" : "EM",
            "type" : "string"
          },
          "hotelName" : {
            "example" : "JW Marriott Parq",
            "type" : "string"
          },
          "contactInfo" : {
            "$ref" : "#/components/schemas/ContactInfo"
          },
          "position" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "leadRate" : {
            "$ref" : "#/components/schemas/LeadRate"
          },
          "availabilityStatus" : {
            "$ref" : "#/components/schemas/AvailabilityStatus"
          },
          "preferenceRank" : {
            "$ref" : "#/components/schemas/PreferenceRank"
          },
          "amenities" : {
            "items" : {
              "$ref" : "#/components/schemas/HotelAmenity"
            },
            "type" : "array"
          },
          "leadImageURI" : {
            "description" : "Contains an HTTPS URL pointing to a .png or .jpg hotel image file. The image will be used as a thumbnail and should be limited to 70x70 pixels to prevent image artifacts by scaling.",
            "example" : "https://images.samplehost.com/samplepath/leadimage.jpg",
            "type" : "string"
          },
          "rating" : {
            "$ref" : "#/components/schemas/HotelRating"
          },
          "sustainabilityAwards" : {
            "items" : {
              "$ref" : "#/components/schemas/SustainabilityAward"
            },
            "type" : "array"
          }
        },
        "required" : [ "address", "amenities", "availabilityStatus", "contactInfo", "hotelName", "leadImageURI", "leadRate", "propertyCode" ],
        "type" : "object"
      },
      "HotelRating" : {
        "description" : "Hotel rating details along with source",
        "properties" : {
          "value" : {
            "description" : "Hotel rating value should be an integer number from 1 to 5, representing its star rating.",
            "example" : 4,
            "maximum" : 5,
            "minimum" : 1,
            "type" : "integer"
          },
          "source" : {
            "description" : "Source of rating",
            "enum" : [ "NORTHSTAR", "AAA_DIAMONDS", "HOTELSTAR", "STAR_RATING_AUSTRALIA" ],
            "example" : "NORTHSTAR",
            "type" : "string"
          }
        },
        "required" : [ "source", "value" ],
        "type" : "object"
      },
      "CatalogName" : {
        "description" : "Northstar, Giata and GDS (Sabre, Amadeus, Galileo) are preferred options at this time",
        "enum" : [ "Northstar", "Giata", "Leonardo", "Amadeus", "Sabre", "Galileo", "CWT", "Expedia", "HRS", "Booking.com" ],
        "type" : "string"
      },
      "BasicHotelProperty" : {
        "properties" : {
          "propertyCode" : {
            "$ref" : "#/components/schemas/PropertyCode"
          },
          "chainCode" : {
            "example" : "HH",
            "type" : "string"
          },
          "hotelName" : {
            "example" : "JW Marriott Parq",
            "type" : "string"
          },
          "contactInfo" : {
            "$ref" : "#/components/schemas/ContactInfo"
          },
          "position" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "cityCode" : {
            "description" : "IATA 3 char city code for this property (required for adding passive segments)",
            "example" : "DFW",
            "type" : "string"
          }
        },
        "required" : [ "cityCode", "contactInfo", "hotelName", "propertyCode" ],
        "type" : "object"
      },
      "AvailabilityStatus" : {
        "enum" : [ "AVAILABLE_FOR_SALE", "CLOSED_OUT" ],
        "type" : "string"
      },
      "PreferenceRank" : {
        "enum" : [ "PREFERRED", "MORE_PREFERRED", "MOST_PREFERRED" ],
        "type" : "string"
      },
      "HotelMedia" : {
        "description" : "Hotel media details",
        "properties" : {
          "url" : {
            "example" : "https://images.samplehost.com/samplepath/hotelEntrance.jpg",
            "format" : "uri",
            "type" : "string"
          },
          "category" : {
            "description" : "OTA code describing the image as defined in OTA Picture Category Code (PIC) list",
            "format" : "int32",
            "type" : "integer"
          },
          "description" : {
            "example" : "Hotel entrance",
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/MediaType"
          }
        },
        "required" : [ "type", "url" ],
        "type" : "object"
      },
      "MediaType" : {
        "description" : "Note that currently only \"IMAGE\" type is supported in Concur application",
        "enum" : [ "IMAGE", "VIDEO" ],
        "type" : "string"
      },
      "Location" : {
        "description" : "Defines Geo Location for search",
        "properties" : {
          "geoLocation" : {
            "$ref" : "#/components/schemas/Geolocation"
          },
          "locationType" : {
            "$ref" : "#/components/schemas/LocationType"
          },
          "name" : {
            "example" : "Sheraton DFW Airport Hotel",
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "iataCode" : {
            "description" : "IATA code of airport if location searched is of type AIRPORT",
            "type" : "string"
          }
        },
        "required" : [ "geoLocation", "locationType", "name" ],
        "type" : "object"
      },
      "LocationType" : {
        "description" : "Type of location associated with this search",
        "enum" : [ "COMPANY_LOCATION", "HOTEL", "ADDRESS", "PLACE", "AIRPORT" ],
        "example" : "Hotel",
        "type" : "string"
      },
      "Geolocation" : {
        "properties" : {
          "latitude" : {
            "example" : 49.246292,
            "type" : "number"
          },
          "longitude" : {
            "example" : -123.116226,
            "type" : "number"
          }
        },
        "required" : [ "latitude", "longitude" ],
        "type" : "object"
      },
      "Address" : {
        "properties" : {
          "addressLines" : {
            "items" : {
              "example" : "910 Mainland Street",
              "type" : "string"
            },
            "type" : "array"
          },
          "city" : {
            "description" : "City name",
            "example" : "Vancouver",
            "type" : "string"
          },
          "state" : {
            "description" : "Two-character state code",
            "example" : "BC",
            "type" : "string"
          },
          "countryCode" : {
            "description" : "Two-character ISO code (ISO ALPHA-2) for country",
            "example" : "CA",
            "type" : "string"
          },
          "postalCode" : {
            "example" : "V5K 0A1",
            "type" : "string"
          }
        },
        "required" : [ "addressLines", "city", "countryCode" ],
        "type" : "object"
      },
      "HotelRates" : {
        "properties" : {
          "propertyCode" : {
            "$ref" : "#/components/schemas/PropertyCode"
          },
          "rates" : {
            "items" : {
              "$ref" : "#/components/schemas/HotelRate"
            },
            "type" : "array"
          }
        },
        "required" : [ "propertyCode", "rates" ],
        "type" : "object"
      },
      "HotelRate" : {
        "properties" : {
          "bedding" : {
            "items" : {
              "$ref" : "#/components/schemas/Bedding"
            },
            "type" : "array"
          },
          "mealsIncluded" : {
            "description" : "Code based on OTA Meal Plan Type (MPT) list (https://www.opentraveldevelopersnetwork.com/code-list)",
            "items" : {
              "example" : 19,
              "format" : "int32",
              "type" : "integer"
            },
            "type" : "array"
          },
          "roomDescription" : {
            "example" : [ "1 bedroom luxury suite", "hearing accessible", "workspace", "garden facing balcony" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "roomAmenities" : {
            "items" : {
              "$ref" : "#/components/schemas/RoomAmenity"
            },
            "type" : "array"
          },
          "roomType" : {
            "description" : "OTA code of type GRI (Guest Room Info) providing guest room type details",
            "example" : 82,
            "format" : "int32",
            "type" : "integer"
          },
          "roomRate" : {
            "$ref" : "#/components/schemas/RoomRate"
          },
          "source" : {
            "$ref" : "#/components/schemas/HotelRate_source"
          }
        },
        "required" : [ "roomDescription", "roomRate" ],
        "type" : "object"
      },
      "RateCategory" : {
        "properties" : {
          "otaCode" : {
            "description" : "Code based on OTA Rate Plan Type (RPT) list (https://www.opentraveldevelopersnetwork.com/code-list)",
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "value" : {
            "description" : "Optional value for the given rate plan type code",
            "example" : "AAA",
            "type" : "string"
          }
        },
        "required" : [ "otaCode" ],
        "type" : "object"
      },
      "TotalPrice" : {
        "description" : "Details about total pricing associated with the stay",
        "properties" : {
          "totalBeforeTax" : {
            "example" : 170.95,
            "multipleOf" : 0.01,
            "type" : "number"
          },
          "taxes" : {
            "example" : 10.0,
            "multipleOf" : 0.01,
            "type" : "number"
          },
          "fees" : {
            "example" : 10.0,
            "multipleOf" : 0.01,
            "type" : "number"
          },
          "totalAfterTax" : {
            "example" : 190.95,
            "multipleOf" : 0.01,
            "type" : "number"
          },
          "currencyCode" : {
            "$ref" : "#/components/schemas/CurrencyCode"
          }
        },
        "required" : [ "currencyCode", "totalBeforeTax" ],
        "type" : "object"
      },
      "Price" : {
        "properties" : {
          "amount" : {
            "example" : 190.95,
            "multipleOf" : 0.01,
            "type" : "number"
          },
          "currencyCode" : {
            "$ref" : "#/components/schemas/CurrencyCode"
          }
        },
        "required" : [ "amount", "currencyCode" ],
        "type" : "object"
      },
      "RoomRate" : {
        "properties" : {
          "rateDescription" : {
            "example" : [ "Promotional Rate" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "rateCategory" : {
            "$ref" : "#/components/schemas/RateCategory"
          },
          "rateChangesOverStay" : {
            "type" : "boolean"
          },
          "roomId" : {
            "example" : "kVNU66KLxuggtu2H",
            "type" : "string"
          },
          "ratePlanId" : {
            "example" : "44SM3FAsfvgcZs9ehGlNOQ",
            "type" : "string"
          },
          "guarantee" : {
            "$ref" : "#/components/schemas/RoomRate_guarantee"
          },
          "prepayRequired" : {
            "description" : "Whether or not prepayment is required for booking this rate",
            "example" : true,
            "type" : "boolean"
          },
          "refundable" : {
            "description" : "Is this rate refundable or not (based on all cancel penalties)",
            "example" : true,
            "type" : "boolean"
          },
          "totalPrice" : {
            "$ref" : "#/components/schemas/TotalPrice"
          },
          "nightlyPrices" : {
            "items" : {
              "$ref" : "#/components/schemas/NightlyPrice"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "cancelPenalties" : {
            "$ref" : "#/components/schemas/CancelPenalties"
          }
        },
        "required" : [ "rateChangesOverStay", "ratePlanId", "totalPrice" ],
        "type" : "object"
      },
      "CancelPenalties" : {
        "properties" : {
          "penalties" : {
            "description" : "Cancel penalties associated with the rate",
            "items" : {
              "$ref" : "#/components/schemas/CancelPenalty"
            },
            "minItems" : 1,
            "type" : "array"
          }
        },
        "required" : [ "penalties" ],
        "type" : "object"
      },
      "RoomRateDetails" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/RoomRate"
        }, {
          "required" : [ "cancelPenalties", "guarantee", "nightlyPrices" ],
          "type" : "object"
        } ]
      },
      "NightlyPrice" : {
        "description" : "Details about nightly price for a given date range",
        "properties" : {
          "basePrice" : {
            "example" : 89.95,
            "multipleOf" : 0.01,
            "type" : "number"
          },
          "taxes" : {
            "$ref" : "#/components/schemas/Taxes"
          },
          "fees" : {
            "$ref" : "#/components/schemas/Fees"
          },
          "totalPrice" : {
            "example" : 100.05,
            "multipleOf" : 0.01,
            "type" : "number"
          },
          "startDate" : {
            "example" : "2021-12-01",
            "format" : "date",
            "type" : "string"
          },
          "endDate" : {
            "example" : "2021-12-31",
            "format" : "date",
            "type" : "string"
          },
          "currencyCode" : {
            "$ref" : "#/components/schemas/CurrencyCode"
          }
        },
        "required" : [ "basePrice", "currencyCode", "endDate", "fees", "startDate", "taxes", "totalPrice" ],
        "type" : "object"
      },
      "CurrencyCode" : {
        "description" : "ISO 4217 currency code",
        "example" : "USD",
        "maxLength" : 3,
        "minLength" : 3,
        "type" : "string"
      },
      "CancelPenalty" : {
        "properties" : {
          "cancelDeadline" : {
            "description" : "date string in the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z",
            "example" : "2017-07-21T17:32:28Z",
            "type" : "string"
          },
          "description" : {
            "example" : "Free cancellation up to 1 week before checkin",
            "type" : "string"
          },
          "refundableStatus" : {
            "$ref" : "#/components/schemas/RefundableStatus"
          },
          "amountPercent" : {
            "$ref" : "#/components/schemas/AmountPercent"
          }
        },
        "required" : [ "cancelDeadline", "description", "refundableStatus" ],
        "type" : "object"
      },
      "RefundableStatus" : {
        "enum" : [ "FULLY_REFUNDABLE", "PARTIALLY_REFUNDABLE", "NON_REFUNDABLE" ],
        "type" : "string"
      },
      "AmountPercent" : {
        "properties" : {
          "taxInclusive" : {
            "description" : "If true, all taxes are included in the returned rate.",
            "example" : true,
            "type" : "boolean"
          },
          "feesInclusive" : {
            "description" : "If true, all fees are included in the returned rate.",
            "example" : true,
            "type" : "boolean"
          },
          "numberOfNights" : {
            "description" : "The number of nights that are to be spent in the property.",
            "example" : 5,
            "type" : "integer"
          },
          "basisType" : {
            "$ref" : "#/components/schemas/AmountPercentBasisType"
          },
          "applyAs" : {
            "$ref" : "#/components/schemas/AmountPercentApplyAs"
          },
          "percent" : {
            "description" : "The percentage used to calculate the amount of the cancel fee.",
            "example" : 10.05,
            "multipleOf" : 0.01,
            "type" : "number"
          },
          "amount" : {
            "$ref" : "#/components/schemas/Price"
          }
        },
        "type" : "object"
      },
      "AmountPercentBasisType" : {
        "enum" : [ "FULL_STAY", "NIGHTS", "FIRST_LAST" ],
        "type" : "string"
      },
      "AmountPercentApplyAs" : {
        "enum" : [ "FIRST_NIGHT_DEPOSIT", "LAST_NIGHT_DEPOST", "FIRST_AND_LAST_NIGHT_DEPOSIT", "FIRST_NIGHT_PAYMENT", "LAST_NIGHT_PAYMENT", "FIRST_AND_LAST_NIGHT_PAYMENT" ],
        "type" : "string"
      },
      "GuaranteeType" : {
        "enum" : [ "DEPOSIT_REQUIRED", "GUARANTEE_REQUIRED", "VENDOR_PROVIDED", "NONE" ],
        "type" : "string"
      },
      "AcceptedPayments" : {
        "items" : {
          "$ref" : "#/components/schemas/PaymentCardType"
        },
        "type" : "array"
      },
      "PaymentModeIndicator" : {
        "enum" : [ "PERSONAL_CARD", "CORPORATE_CARD", "CONCUR_VIRTUAL_CARD", "VENDOR_VIRTUAL_CARD" ],
        "example" : "PersonalCard",
        "type" : "string"
      },
      "PaymentCardType" : {
        "enum" : [ "AMERICAN_AIRLINES", "ALASKA_BARTER", "AMEX", "AWARD_CREDIT", "CANADIAN", "CARTE_BLANCHE", "CHINA_UNION_PAY", "CONFERMA", "DELTA", "DINERS_CLUB", "DISCOVER", "ENROUTE", "EURO_CARD", "JCB", "MC", "NORTHWEST", "TWA", "UATP", "UNITED_TRAVEL", "UNITED_CREDIT", "VISA" ],
        "example" : "VISA",
        "type" : "string"
      },
      "PropertyCode" : {
        "example" : "HH498949",
        "type" : "string"
      },
      "RequestorInfo" : {
        "description" : "Information about POS (Point Of Sale), traveler and user associated with this request",
        "properties" : {
          "posRequestorId" : {
            "description" : "An identifier of the entity making the request (e.g. ATA/IATA/ID number)",
            "example" : "abc1234",
            "type" : "string"
          },
          "travelerUuid" : {
            "description" : "UUID that identifies the traveler within Concur",
            "example" : "123e4567-e89b-12d3-a456-426614174000",
            "type" : "string"
          },
          "loginId" : {
            "description" : "Login ID of traveler within Concur. Only sent when available.",
            "example" : "abc@concur.com",
            "type" : "string"
          },
          "bookingForSelf" : {
            "description" : "Is logged in person booking for self or on behalf of someone else",
            "example" : true,
            "type" : "boolean"
          }
        },
        "required" : [ "posRequestorId", "travelerUuid" ],
        "type" : "object"
      },
      "Radius" : {
        "description" : "Radius to restrict the search for hotels. 'maxRadius' allows extending search radius for preferred hotel properties and can be more than radius defined by traveler",
        "properties" : {
          "value" : {
            "example" : 5,
            "format" : "int32",
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer"
          },
          "unit" : {
            "$ref" : "#/components/schemas/DistanceUnit"
          }
        },
        "required" : [ "unit", "value" ],
        "type" : "object"
      },
      "DistanceUnit" : {
        "description" : "Unit of distance",
        "enum" : [ "MILE", "KM" ],
        "type" : "string"
      },
      "SearchSessionToken" : {
        "description" : "Session token to be generated and provided by server on initial \"search\" call that can be referenced back for future api calls on the same session.",
        "format" : "uuid",
        "type" : "string"
      },
      "HotelDetails" : {
        "properties" : {
          "propertyRef" : {
            "$ref" : "#/components/schemas/HotelPropertyRef"
          },
          "hotelDescriptiveInfo" : {
            "$ref" : "#/components/schemas/HotelDetails_hotelDescriptiveInfo"
          }
        },
        "required" : [ "descriptiveInfo", "propertyRef" ],
        "type" : "object"
      },
      "HotelDescriptiveInfo" : {
        "properties" : {
          "otaCode" : {
            "description" : "Code based on OTA Additional Detail Type (ADT) list (https://www.opentraveldevelopersnetwork.com/code-list)",
            "example" : 8,
            "format" : "int32",
            "type" : "integer"
          },
          "contents" : {
            "example" : [ "Check-in at 3:00PM", "Check-out at 11:00AM" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "startDate" : {
            "description" : "Start date for descriptive info if applicable only for specific dates (e.g. for alerts or special events)",
            "example" : "2021-10-20",
            "format" : "date",
            "type" : "string"
          },
          "endDate" : {
            "description" : "End date for descriptive info if applicable only for specific dates (e.g. for alerts or special events)",
            "example" : "2021-11-20",
            "format" : "date",
            "type" : "string"
          }
        },
        "required" : [ "contents", "otaCode" ],
        "type" : "object"
      },
      "ReservationCriteria" : {
        "properties" : {
          "hotelPropertyRef" : {
            "$ref" : "#/components/schemas/HotelPropertyRef"
          },
          "requestorInfo" : {
            "$ref" : "#/components/schemas/RequestorInfo"
          },
          "ratePlanId" : {
            "example" : "44SM3FAsfvgcZs9ehGlNOQ",
            "type" : "string"
          },
          "guests" : {
            "items" : {
              "$ref" : "#/components/schemas/Guest"
            },
            "type" : "array"
          },
          "confirmationCodes" : {
            "items" : {
              "$ref" : "#/components/schemas/ConfirmationCode"
            },
            "type" : "array"
          },
          "paymentModeIndicator" : {
            "$ref" : "#/components/schemas/PaymentModeIndicator"
          },
          "guarantee" : {
            "$ref" : "#/components/schemas/ReservationCriteria_guarantee"
          },
          "loyalty" : {
            "$ref" : "#/components/schemas/ReservationCriteria_loyalty"
          },
          "checkin" : {
            "example" : "2021-10-20",
            "format" : "date",
            "type" : "string"
          },
          "checkout" : {
            "example" : "2021-10-23",
            "format" : "date",
            "type" : "string"
          },
          "comments" : {
            "description" : "Comments about special requests for this booking",
            "example" : [ "Accessible", "NonSmoking", "Upper floor away from elevator" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "customFields" : {
            "description" : "Vendor specific fields if setup for vendor integration",
            "items" : {
              "$ref" : "#/components/schemas/CustomField"
            },
            "type" : "array"
          },
          "searchSessionToken" : {
            "$ref" : "#/components/schemas/SearchSessionToken"
          },
          "legalEntity" : {
            "$ref" : "#/components/schemas/LegalEntity"
          },
          "threeDSecure" : {
            "$ref" : "#/components/schemas/ThreeDSecure"
          }
        },
        "required" : [ "checkin", "checkout", "customFields", "guests", "hotelPropertyRef", "ratePlanId", "requestorInfo" ],
        "type" : "object"
      },
      "ReservationDetails" : {
        "properties" : {
          "confirmationCodes" : {
            "items" : {
              "$ref" : "#/components/schemas/ConfirmationCode"
            },
            "type" : "array"
          },
          "status" : {
            "$ref" : "#/components/schemas/ReservationStatus"
          },
          "basicHotelProperty" : {
            "$ref" : "#/components/schemas/BasicHotelProperty"
          },
          "roomRate" : {
            "$ref" : "#/components/schemas/RoomRateDetails"
          },
          "checkin" : {
            "example" : "2021-10-20",
            "format" : "date",
            "type" : "string"
          },
          "checkout" : {
            "example" : "2021-10-23",
            "format" : "date",
            "type" : "string"
          },
          "guests" : {
            "items" : {
              "$ref" : "#/components/schemas/Guest"
            },
            "type" : "array"
          },
          "roomDescription" : {
            "example" : [ "1 bedroom luxury suite", "hearing accessible", "workspace", "garden facing balcony" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "comments" : {
            "description" : "Comments about special requests for this booking",
            "example" : [ "Accessible", "NonSmoking", "Upper floor away from elevator" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "basicHotelProperty", "comments", "confirmationCodes", "guest", "roomDescription", "roomRate", "status" ],
        "type" : "object"
      },
      "ReservationStatus" : {
        "enum" : [ "PENDING_CONFIRMATION", "RESERVED", "CANCELLED" ],
        "type" : "string"
      },
      "ConfirmationCode" : {
        "properties" : {
          "codeType" : {
            "$ref" : "#/components/schemas/ConfirmationCodeType"
          },
          "code" : {
            "example" : "3704188022P5683",
            "type" : "string"
          }
        },
        "required" : [ "code", "codeType" ],
        "type" : "object"
      },
      "ConfirmationCodeType" : {
        "description" : "Confirmation Code Types that maps to OTA codes for Unique Id Types list RESERVATION(Record Locator)=14, SUPPLIER_CONFIRMATION=40, CANCELLATION=50, HOTEL_CONFIRMATION(Property Confirmation No.)=10, CONCUR_GDS_REFERENCE -> Concur Booking Record Locator for Passives",
        "enum" : [ "RESERVATION", "SUPPLIER_CONFIRMATION", "CANCELLATION", "HOTEL_CONFIRMATION", "CONCUR_GDS_REFERENCE" ],
        "type" : "string"
      },
      "Guest" : {
        "properties" : {
          "firstname" : {
            "example" : "Blake",
            "type" : "string"
          },
          "lastname" : {
            "example" : "Smith",
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "companyName" : {
            "example" : "SAP Concur",
            "type" : "string"
          },
          "contactInfo" : {
            "$ref" : "#/components/schemas/ContactInfo"
          },
          "birthdate" : {
            "example" : "1990-04-17",
            "format" : "date",
            "type" : "string"
          }
        },
        "required" : [ "companyName", "contactInfo", "firstname", "lastname" ],
        "type" : "object"
      },
      "ReadCriteria" : {
        "properties" : {
          "requestorInfo" : {
            "$ref" : "#/components/schemas/RequestorInfo"
          },
          "confirmationCodes" : {
            "items" : {
              "$ref" : "#/components/schemas/ConfirmationCode"
            },
            "type" : "array"
          }
        },
        "required" : [ "confirmationCodes", "requestorInfo" ],
        "type" : "object"
      },
      "ModifyCriteria" : {
        "properties" : {
          "reservationCriteria" : {
            "$ref" : "#/components/schemas/ReservationCriteria"
          },
          "confirmationCodes" : {
            "items" : {
              "$ref" : "#/components/schemas/ConfirmationCode"
            },
            "type" : "array"
          }
        },
        "required" : [ "confirmationCodes", "reservationCriteria" ],
        "type" : "object"
      },
      "CancelCriteria" : {
        "properties" : {
          "requestorInfo" : {
            "$ref" : "#/components/schemas/RequestorInfo"
          },
          "confirmationCodes" : {
            "items" : {
              "$ref" : "#/components/schemas/ConfirmationCode"
            },
            "type" : "array"
          }
        },
        "required" : [ "confirmationCodes", "requestorInfo" ],
        "type" : "object"
      },
      "CancelDetails" : {
        "properties" : {
          "confirmationCodes" : {
            "items" : {
              "$ref" : "#/components/schemas/ConfirmationCode"
            },
            "type" : "array"
          },
          "cancellationRemarks" : {
            "example" : "Reservation cancelled with no penalty",
            "type" : "string"
          }
        },
        "required" : [ "confirmationCodes" ],
        "type" : "object"
      },
      "ContactInfo" : {
        "properties" : {
          "phoneNumbers" : {
            "items" : {
              "example" : "+1-555-555-1234",
              "type" : "string"
            },
            "type" : "array"
          },
          "faxNumber" : {
            "example" : "+1-555-555-5678",
            "type" : "string"
          },
          "emails" : {
            "items" : {
              "format" : "email",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "emails", "phoneNumbers" ],
        "type" : "object"
      },
      "LeadRate" : {
        "description" : "Lead rate is the lowest nightly rate averaged over the stay, before taxes and fees",
        "properties" : {
          "avgNightlyRate" : {
            "$ref" : "#/components/schemas/Price"
          }
        },
        "required" : [ "avgNightlyRate" ],
        "type" : "object"
      },
      "HotelAmenity" : {
        "description" : "Hotel amenity containing code as described in OTA code list Hotel Amenity Code (HAC)",
        "properties" : {
          "amenityCode" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "amenityCode" ],
        "type" : "object"
      },
      "RoomAmenity" : {
        "description" : "Room amenity containing code as described in OTA code list Room Amenity Type (RMA)",
        "properties" : {
          "amenityCode" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "amenityCode" ],
        "type" : "object"
      },
      "Error" : {
        "description" : "Error with OTA code and description",
        "properties" : {
          "otaCode" : {
            "description" : "Code based on OTA Error Codes list (https://www.opentraveldevelopersnetwork.com/code-list)",
            "format" : "int32",
            "type" : "integer"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "message" ],
        "type" : "object"
      },
      "SearchResponse" : {
        "properties" : {
          "hotelProperties" : {
            "items" : {
              "$ref" : "#/components/schemas/HotelProperty"
            },
            "type" : "array"
          },
          "searchSessionToken" : {
            "$ref" : "#/components/schemas/SearchSessionToken"
          }
        },
        "required" : [ "hotelProperties" ],
        "type" : "object"
      },
      "RatesResponse" : {
        "properties" : {
          "checkin" : {
            "example" : "2021-10-20",
            "format" : "date",
            "type" : "string"
          },
          "checkout" : {
            "example" : "2021-10-23",
            "format" : "date",
            "type" : "string"
          },
          "hotelRates" : {
            "items" : {
              "$ref" : "#/components/schemas/HotelRates"
            },
            "type" : "array"
          }
        },
        "required" : [ "checkin", "checkout", "hotelRates" ],
        "type" : "object"
      },
      "RateDetailsResponse" : {
        "properties" : {
          "checkin" : {
            "example" : "2021-10-20",
            "format" : "date",
            "type" : "string"
          },
          "checkout" : {
            "example" : "2021-10-23",
            "format" : "date",
            "type" : "string"
          },
          "roomRate" : {
            "$ref" : "#/components/schemas/RoomRateDetails"
          }
        },
        "required" : [ "checkin", "checkout", "roomRate" ],
        "type" : "object"
      },
      "HotelDetailsResponse" : {
        "properties" : {
          "hotelDetailsList" : {
            "items" : {
              "$ref" : "#/components/schemas/HotelDetails"
            },
            "type" : "array"
          }
        },
        "required" : [ "hotelDetailsList" ],
        "type" : "object"
      },
      "Bedding" : {
        "description" : "Details about bedding associated with the room",
        "properties" : {
          "quantity" : {
            "description" : "No. of beds",
            "example" : 1,
            "type" : "integer"
          },
          "bedTypeCode" : {
            "description" : "Code based on OTA Bed Type (BED) list (https://www.opentraveldevelopersnetwork.com/code-list)",
            "example" : 3,
            "format" : "int32",
            "type" : "integer"
          }
        },
        "required" : [ "bedTypeCode", "quantity" ],
        "type" : "object"
      },
      "Taxes" : {
        "description" : "Representation of nightly tax amount associated with a rate along with optional breakdown.",
        "properties" : {
          "amount" : {
            "example" : 5.55,
            "multipleOf" : 0.01,
            "type" : "number"
          },
          "taxBreakdown" : {
            "items" : {
              "$ref" : "#/components/schemas/FeeTaxType"
            },
            "type" : "array"
          }
        },
        "required" : [ "amount" ],
        "type" : "object"
      },
      "Fees" : {
        "description" : "Representation of nightly fees associated with a rate for given dates along with optional breakdown.",
        "properties" : {
          "amount" : {
            "example" : 10.95,
            "multipleOf" : 0.01,
            "type" : "number"
          },
          "feeBreakdown" : {
            "items" : {
              "$ref" : "#/components/schemas/FeeTaxType"
            },
            "type" : "array"
          }
        },
        "required" : [ "amount" ],
        "type" : "object"
      },
      "FeeTaxType" : {
        "description" : "Fee or Tax associated with rate - can be either included or excluded from total rate as marked with 'inclusive' field.",
        "properties" : {
          "amount" : {
            "example" : 8.05,
            "multipleOf" : 0.01,
            "type" : "number"
          },
          "fttCode" : {
            "description" : "Code based on OTA's Fee Tax Type (FTT) list (https://www.opentraveldevelopersnetwork.com/code-list)",
            "example" : 15,
            "format" : "int32",
            "type" : "integer"
          },
          "inclusive" : {
            "description" : "Whether or not this tax/fee is included in totalAmountAfterTax amount.",
            "example" : true,
            "type" : "boolean"
          }
        },
        "required" : [ "amount", "fttCode", "inclusive" ],
        "type" : "object"
      },
      "SustainabilityAward" : {
        "description" : "Award/Certification related to sustainability awarded to the hotel",
        "properties" : {
          "label" : {
            "description" : "Name or label of the award/certification",
            "example" : "LEED",
            "type" : "string"
          },
          "level" : {
            "description" : "Optional level of certification",
            "example" : "Gold",
            "type" : "string"
          }
        },
        "required" : [ "label" ],
        "type" : "object"
      },
      "LegalEntity" : {
        "description" : "Provides details about the legal entity associated with this booking if available",
        "properties" : {
          "name" : {
            "description" : "Name of the legal entity",
            "example" : "My Great Company",
            "type" : "string"
          },
          "taxId" : {
            "description" : "Tax identity of the legal entity",
            "example" : "111-11-1111",
            "type" : "string"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          }
        },
        "required" : [ "name", "taxId" ],
        "type" : "object"
      },
      "ThreeDSecure" : {
        "description" : "3D Secure Strong Customer Authentication payment verification parameters",
        "properties" : {
          "avv" : {
            "description" : "For 3DS1, this is the CAVV. For 3DS2, this is the AVV.",
            "type" : "string"
          },
          "cavvAlgorithm" : {
            "description" : "Identifies the algorithm used to generate the CAVV for 3DS1.",
            "maxLength" : 8,
            "minLength" : 1,
            "type" : "string"
          },
          "messageVersion" : {
            "description" : "3D Secure version",
            "maxLength" : 32,
            "minLength" : 1,
            "type" : "string"
          },
          "transactionId" : {
            "description" : "Unique transaction identifier assigned by the 3DS Server to identify a single transaction.",
            "type" : "string"
          },
          "threeDSServerTransactionID" : {
            "description" : "For 3DS1, this identifies the XID. For 3DS2, this identifies the dsTransactionID.",
            "type" : "string"
          },
          "eci" : {
            "description" : "Electronic Commerce Indicator",
            "maxLength" : 8,
            "minLength" : 1,
            "type" : "string"
          },
          "exemptionCode" : {
            "description" : "Identifies SCA exemption type",
            "maxLength" : 8,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "avv", "eci", "messageVersion", "transactionID" ],
        "type" : "object"
      },
      "HotelProperty_altPropertyCode" : {
        "description" : "Alternate property code",
        "properties" : {
          "catalogCode" : {
            "$ref" : "#/components/schemas/PropertyCode"
          },
          "catalogName" : {
            "$ref" : "#/components/schemas/CatalogName"
          }
        },
        "required" : [ "catalogCode", "catalogName" ],
        "type" : "object"
      },
      "HotelRate_source" : {
        "description" : "Details about source attributed to this rate. Please note that logo is given preference to name and nothing is displayed as source if suppress is true",
        "properties" : {
          "name" : {
            "description" : "Name of the supplier for this source that can be shown in UI (Logo is given higher preference)",
            "example" : "Expedia",
            "type" : "string"
          },
          "logo" : {
            "description" : "Logo of the supplier for this source that can be shown in UI",
            "example" : "https://images.samplehost.com/samplepath/sourceLogo.png",
            "format" : "uri",
            "type" : "string"
          },
          "suppress" : {
            "description" : "If true, will suppress all source attributions for this rate",
            "example" : true,
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "RoomRate_guarantee" : {
        "properties" : {
          "guaranteeType" : {
            "$ref" : "#/components/schemas/GuaranteeType"
          },
          "acceptedPayments" : {
            "$ref" : "#/components/schemas/AcceptedPayments"
          },
          "cvvRequired" : {
            "type" : "boolean"
          },
          "amountPercent" : {
            "$ref" : "#/components/schemas/AmountPercent"
          }
        },
        "required" : [ "guaranteeType" ],
        "type" : "object"
      },
      "HotelDetails_hotelDescriptiveInfo" : {
        "properties" : {
          "propertyDescription" : {
            "example" : "Offering a restaurant and a fitness centre, Hilton Garden Inn Long Island City is located in Long Island City. Free WiFi access is available. Each room here will provide you with a TV. Complete with a microwave, the dining area also has a refrigerator and a coffee machine. Guests will enjoy a full service restaurant and bar with evening room service. Other facilities offered at the property include a shared lounge and luggage storage. LaGuardia Airport is 8 km away. Guests are required to show a photo identification and credit card upon check-in. Please note that all Special Requests are subject to availability and additional charges may apply. Due to Coronavirus (COVID-19), wearing a face mask is mandatory in all indoor common areas. In response to Coronavirus (COVID-19), additional safety and sanitation measures are currently in effect at this property. Food &amp; beverage services at this property may be limited or unavailable due to Coronavirus (COVID-19). Due to Coronavirus (COVID-19), this property is taking steps to help protect the safety of guests and staff. Certain services and amenities may be reduced or unavailable as a result. Please note that the Extra Bed / Crib is subject to availability. The property will be under renovations to the lobby bar and lounge area from 6 January 2020 until 30 March 2020.\n",
            "type" : "string"
          },
          "descriptiveInfos" : {
            "items" : {
              "$ref" : "#/components/schemas/HotelDescriptiveInfo"
            },
            "type" : "array"
          },
          "mediaItems" : {
            "items" : {
              "$ref" : "#/components/schemas/HotelMedia"
            },
            "type" : "array"
          }
        },
        "required" : [ "descriptiveInfos", "mediaItems", "propertyDescription" ],
        "type" : "object"
      },
      "ReservationCriteria_guarantee" : {
        "properties" : {
          "cardType" : {
            "$ref" : "#/components/schemas/PaymentCardType"
          },
          "cardNumber" : {
            "example" : "4242-4242-4242-4242",
            "type" : "string"
          },
          "cvv" : {
            "description" : "Card Verification Value - three or four-digit number on credit card for security",
            "example" : "369",
            "type" : "string"
          },
          "cardHolderName" : {
            "example" : "John Smith",
            "type" : "string"
          },
          "cardHolderAddress" : {
            "$ref" : "#/components/schemas/Address"
          }
        },
        "required" : [ "cardNumber", "cardType" ],
        "type" : "object"
      },
      "ReservationCriteria_loyalty" : {
        "properties" : {
          "programCode" : {
            "example" : "EM",
            "type" : "string"
          },
          "accountId" : {
            "example" : "209875030",
            "type" : "string"
          }
        },
        "required" : [ "accountId", "programCode" ],
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "BasicAuth" : {
        "scheme" : "basic",
        "type" : "http"
      }
    }
  }
}