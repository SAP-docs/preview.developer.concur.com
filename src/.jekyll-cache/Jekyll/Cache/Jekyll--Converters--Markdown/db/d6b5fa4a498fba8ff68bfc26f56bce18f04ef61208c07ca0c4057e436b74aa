I"Í;<ul>
  <li><a href="#overview">Overview</a></li>
  <li><a href="#version">Version</a></li>
  <li><a href="#regional-availability">Regional Availability</a></li>
  <li><a href="#explore-the-api">Explore the API</a>
    <ul>
      <li><a href="#prerequisites">Prerequisites</a></li>
      <li><a href="#retrieve-a-user-access-token">Acquire an Access Token</a></li>
      <li><a href="#explore-the-api-in-javascript">Explore the API in JavaScript</a></li>
    </ul>
  </li>
</ul>

<h3 id="overview">Overview</h3>

<p>The Receipts V4 API accepts three different formulae for posting a receipt:</p>

<ol>
  <li><strong>Receipt Data</strong> - Your receipt data is stored along with an automatically generated receipt image file.</li>
  <li><strong>Receipt Data &amp; Receipt Image</strong> - Your receipt data and receipt image file are stored.</li>
  <li><strong>Receipt Image w/o Data</strong> - Your receipt image file is stored along with some accompanying metadata.</li>
</ol>

<p>All of the above are receipt resources, but the service draws a distinction between resources with data versus resources that are standalone images.</p>

<p>Resources with data are schema-enforced and are referred to as e-receipts.</p>

<p>Resources of standalone images are referred to as as Image-Only Receipts.</p>

<p>These two different resources are sent/fetched from the Receipts V4 API via different endpoints:</p>
<ul>
  <li>E-Receipts (Receipts With Data) - Use E-Receipt Endpoints</li>
  <li>Image-Only Receipts (Standalone Images Without Data) - Use Image-Only Receipt Endpoints</li>
</ul>

<blockquote>
  <p><strong>Note</strong>: The Receipts V4 API only provides GET access to individual or userâ€™s receipts that have been submitted through this API, and, therefore the response will not be comprehensive of every user receipt within SAP Concur. All other images should be obtained via the <a href="https://developer.concur.com/api-reference/image/v1.image.html">Image v1 API</a>. Additionally, only the receipts will be returned, there will not be any corresponding entry data. Examples of Enterprise apps that should use the Image v1 API include: ERP integrations for financial journal entry postings, VAT reclaim integrations that obtain transactions to calculate VAT reclaim, project billing integrations used to substantiate expenses billed back, etc.</p>
</blockquote>

<h3 id="prior-versions">Prior Versions</h3>

<ul>
  <li>Receipts v3 (Deprecated) documentation is available <a href="./v3.receipts.html">here</a></li>
</ul>

<h3 id="overview-of-version-40">Overview of Version 4.0</h3>

<p>Version 4.0 of the Receipts API offers features like more receipt types, automatic e-receipt generation in end userâ€™s preferred language and ability for partners to provide detailed tax information. Unlike version 3.0, we are discontinuing the use of matching facts; instead the partner will have to create a receipt for a specific end user. Receipts 4.0 works only with the new <a href="https://developer.concur.com/api-reference/authentication/apidoc.html">Authentication API</a>.</p>

<h3 id="regional-availability">Regional Availability</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://us.api.concursolutions.com/receipts/
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://emea.api.concursolutions.com/receipts/
</code></pre></div></div>

<h3 id="explore-the-api">Explore the API</h3>

<h4 id="prerequisites">Prerequisites</h4>

<ol>
  <li><a href="https://developer.concur.com/manage-apps/register.html">Create a sandbox</a> if you donâ€™t already have one.</li>
  <li>Read the <a href="https://developer.concur.com/api-reference/authentication/getting-started.html">Getting Started</a> section of <a href="https://developer.concur.com/api-reference/authentication/apidoc.html">Authentication API</a>.</li>
</ol>

<p>Once you have registered your application, read about the <a href="/api-reference/receipts/endpoints.html">API endpoints</a>, or click the button to download a request collection for Postman.</p>

<p><a href="https://app.getpostman.com/run-collection/bfe85f4a4e435a161a8a" target="_blank" onclick="ga('send', 'event', 'Postman', 'Click', 'https://app.getpostman.com/run-collection/bfe85f4a4e435a161a8a');">
  <img src="https://run.pstmn.io/button.svg" alt="Run in Postman" />
</a></p>

<h4 id="retrieve-a-user-access-token">Retrieve a User Access Token:</h4>

<p>Before making requests to the Receipts API, you must <a href="https://developer.concur.com/api-reference/authentication/getting-started.html">obtain an access token from the Authentication API</a>.</p>

<p>The response will include an <code class="language-plaintext highlighter-rouge">access_token</code> field, which contains your access token. For subsequent calls, you will need to include this access token in the <code class="language-plaintext highlighter-rouge">Authorization</code> header of your calls. An <code class="language-plaintext highlighter-rouge">id_token</code> will be also included in the response. In order to retrieve the unique ID for your user, you will have to decode this <code class="language-plaintext highlighter-rouge">id_token</code> at <a href="https://jwt.io/">jwt.io</a>. You will need this ID in order to post receipts.</p>

<p>Examples:</p>

<p>cURL:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-d</span> <span class="s2">"client_secret={YOUR SECRET}&amp;client_id={YOUR CLIENT ID}&amp;grant_type=password&amp;username={YOUR USERNAME}&amp;password={YOUR PASSWORD}"</span> https://us.api.concursolutions.com/oauth2/v0/token
</code></pre></div></div>

<p>HTTPie:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http <span class="nt">-f</span> POST https://us.api.concursolutions.com/oauth2/v0/token <span class="nv">client_secret</span><span class="o">={</span>YOUR SECRET<span class="o">}</span> <span class="nv">client_id</span><span class="o">={</span>YOUR CLIENT ID<span class="o">}</span> <span class="nv">grant_type</span><span class="o">=</span>password <span class="nv">username</span><span class="o">={</span>YOUR USERNAME<span class="o">}</span> <span class="nv">password</span><span class="o">=</span>P<span class="o">{</span>YOUR PASSWORD<span class="o">}</span>
</code></pre></div></div>

<h4 id="explore-the-api-in-javascript">Explore the API in JavaScript</h4>

<p>Below are some simple NodeJS code snippets for getting a token and posting a receipt.</p>

<h5 id="retrieve-a-user-access-token-1">Retrieve a User Access Token:</h5>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="dl">'</span><span class="s1">use strict</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">request</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">request</span><span class="dl">'</span><span class="p">);</span>

<span class="nx">request</span><span class="p">.</span><span class="nx">post</span><span class="p">({</span>
    <span class="na">url</span><span class="p">:</span><span class="dl">'</span><span class="s1">https://us.api.concursolutions.com/oauth2/v0/token</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">form</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">client_secret</span><span class="p">:</span> <span class="dl">'</span><span class="s1">YOUR VALUE HERE</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">client_id</span><span class="p">:</span> <span class="dl">'</span><span class="s1">YOUR VALUE HERE</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">username</span><span class="p">:</span> <span class="dl">'</span><span class="s1">YOUR VALUE HERE</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">password</span><span class="p">:</span> <span class="dl">'</span><span class="s1">YOUR VALUE HERE</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">grant_type</span><span class="p">:</span> <span class="dl">'</span><span class="s1">password</span><span class="dl">'</span>
    <span class="p">}},</span>
    <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">httpResponse</span><span class="p">,</span> <span class="nx">body</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">err</span><span class="p">);</span> <span class="p">}</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Status:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">httpResponse</span><span class="p">.</span><span class="nx">statusCode</span><span class="p">);</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Response:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">body</span><span class="p">);</span>
    <span class="p">});</span>
</code></pre></div></div>

<h5 id="post-a-receipt">Post a Receipt</h5>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="dl">'</span><span class="s1">use strict</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">https</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">https</span><span class="dl">'</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">ACCESS_TOKEN</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">YOUR ACCESS TOKEN HERE</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">USER_ID</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">YOUR VALUE HERE</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">receipt</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">YOUR_RECEIPT_HERE</span><span class="p">);</span>

<span class="kd">const</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">hostname</span><span class="p">:</span> <span class="dl">'</span><span class="s1">us.api.concursolutions.com</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">path</span><span class="p">:</span> <span class="s2">`/receipts/v4/users/</span><span class="p">${</span><span class="nx">USER_ID</span><span class="p">}</span><span class="s2">`</span><span class="p">,</span>
    <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
        <span class="dl">'</span><span class="s1">Authorization</span><span class="dl">'</span><span class="p">:</span> <span class="s2">`Bearer </span><span class="p">${</span><span class="nx">ACCESS_TOKEN</span><span class="p">}</span><span class="s2">`</span><span class="p">,</span>
        <span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/json</span><span class="dl">'</span><span class="p">,</span>
        <span class="dl">'</span><span class="s1">Content-Length</span><span class="dl">'</span><span class="p">:</span> <span class="nx">Buffer</span><span class="p">.</span><span class="nx">byteLength</span><span class="p">(</span><span class="nx">receipt</span><span class="p">),</span>
        <span class="dl">'</span><span class="s1">Link</span><span class="dl">'</span><span class="p">:</span> <span class="dl">'</span><span class="s1">&lt;http://schema.concursolutions.com/general-receipt.schema.json&gt;;rel=describedBy</span><span class="dl">'</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="kd">const</span> <span class="nx">req</span> <span class="o">=</span> <span class="nx">https</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="nx">options</span><span class="p">,</span> <span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">statusCode:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">res</span><span class="p">.</span><span class="nx">statusCode</span><span class="p">);</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">headers:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">res</span><span class="p">.</span><span class="nx">headers</span><span class="p">);</span>

    <span class="nx">res</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">data</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nx">process</span><span class="p">.</span><span class="nx">stdout</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
    <span class="p">});</span>
<span class="p">});</span>

<span class="nx">req</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">receipt</span><span class="p">);</span>
<span class="nx">req</span><span class="p">.</span><span class="nx">end</span><span class="p">();</span>

<span class="nx">req</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">error</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span>
<span class="p">});</span>
</code></pre></div></div>
:ET