I"Œ$<p>For more information refer to <a href="https://help.github.com/articles/working-with-forks/">Working with forks</a> in the GitHub documentation.</p>

<ul>
  <li><a href="#create-and-clone">Create and clone a fork repository to your computer (One time setup)</a></li>
  <li><a href="#edit-files">Edit files in the <code class="language-plaintext highlighter-rouge">local</code> repository</a></li>
  <li><a href="#push-edits-local-to-remote">Push edits from your <code class="language-plaintext highlighter-rouge">local</code> to your <code class="language-plaintext highlighter-rouge">remote</code> fork repository</a></li>
  <li><a href="#open-pull-request">Open a pull request for the base repository</a></li>
</ul>

<h2 id="create-and-clone-a-fork-repository-to-your-computer-one-time-setup"><a name="create-and-clone"></a>Create and clone a fork repository to your computer (One time setup)</h2>

<blockquote>
  <blockquote>

    <p>Note: You go through these steps exactly once to get everything setup. This set of steps:</p>
    <ul>
      <li>Creates a fork of the branch within GitHub.
        <ul>
          <li>This fork is a repository under your user name or organization.</li>
          <li>This repository in GitHub is referred to as a <code class="language-plaintext highlighter-rouge">remote</code> repository,</li>
        </ul>
      </li>
      <li>Clones the the remote repository (your fork) to your computer.
        <ul>
          <li>This clone is referred to as a <code class="language-plaintext highlighter-rouge">local</code> repository.</li>
        </ul>
      </li>
    </ul>
  </blockquote>
</blockquote>

<ol>
  <li>Go to <a href="https://github.com/concur/developer.concur.com">https://github.com/concur/developer.concur.com</a>.</li>
  <li>Click the <strong>Fork</strong> button in the upper right hand corner of the page.</li>
  <li>Select the user or organization for the fork. A new fork is created.</li>
  <li>In the new fork, click the <strong>Clone or download</strong> button.</li>
  <li>Choose the method you wish to use, HTTPS or SSH.</li>
  <li>Copy the URI path for the method.</li>
  <li>Open a command line interface.</li>
  <li>Navigate to the path where you want to store source code. If you need a guide on how to do this via the command prompt here is one for <a href="https://www.macworld.com/article/2042378/master-the-command-line-navigating-files-and-folders.html">MacOS</a> and <a href="https://www.digitalcitixzen.life/command-prompt-how-use-basic-commands">Windows</a>. Typically it is <code class="language-plaintext highlighter-rouge">cd {path}</code> on both.</li>
  <li>Issue: <code class="language-plaintext highlighter-rouge">git clone {uri}</code> where <code class="language-plaintext highlighter-rouge">uri</code> is the path copied earlier. Example: <code class="language-plaintext highlighter-rouge">git clone https://github.com/retrosight/developer.concur.com.git</code>. A typical result of cloning is as follows.</li>
</ol>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>âžœ  <span class="nb">source </span>git clone git@github.com:retrosight/developer.concur.com.git
Cloning into <span class="s1">'developer.concur.com'</span>...
remote: Enumerating objects: 6, <span class="k">done</span><span class="nb">.</span>
remote: Counting objects: 100% <span class="o">(</span>6/6<span class="o">)</span>, <span class="k">done</span><span class="nb">.</span>
remote: Compressing objects: 100% <span class="o">(</span>6/6<span class="o">)</span>, <span class="k">done</span><span class="nb">.</span>
remote: Total 31798 <span class="o">(</span>delta 0<span class="o">)</span>, reused 0 <span class="o">(</span>delta 0<span class="o">)</span>, pack-reused 31792
Receiving objects: 100% <span class="o">(</span>31798/31798<span class="o">)</span>, 185.39 MiB | 5.52 MiB/s, <span class="k">done</span><span class="nb">.</span>
Resolving deltas: 100% <span class="o">(</span>20992/20992<span class="o">)</span>, <span class="k">done</span><span class="nb">.</span>
</code></pre></div></div>

<h2 id="edit-files-in-the-local-repository"><a name="edit-files"></a>Edit files in the <code class="language-plaintext highlighter-rouge">local</code> repository</h2>

<blockquote>
  <p>Note: Since you are working in a fork you can start editing straightaways without creating a branch.</p>
</blockquote>

<ol>
  <li>Launch the editor of your choice.</li>
  <li>Select <strong>File &gt; Open</strong> in and select the folder containing your source.</li>
  <li>Edit and save files as desired.</li>
</ol>

<h2 id="push-edits-from-your-local-to-your-remote-fork-repository"><a name="push-edits-local-to-remote"></a>Push edits from your <code class="language-plaintext highlighter-rouge">local</code> to your <code class="language-plaintext highlighter-rouge">remote</code> fork repository</h2>

<blockquote>
  <p>This cycle is repeated as many times as you wish to push changes in your <code class="language-plaintext highlighter-rouge">local</code> fork repository to your <code class="language-plaintext highlighter-rouge">remote</code> fork repository in GitHub.</p>
</blockquote>

<p>In the command line after navigating to the <code class="language-plaintext highlighter-rouge">local</code> repository folder:</p>

<ol>
  <li>Issue: <code class="language-plaintext highlighter-rouge">git add .</code> This tells git to add any and all changes youâ€™ve made.</li>
  <li>Issue: <code class="language-plaintext highlighter-rouge">git commit</code> This opens a text editing tool so you can add notes about the commit. See the <a href="#vim-on-mac">VIM on Mac</a> section below for additional notes.</li>
  <li>Issue: <code class="language-plaintext highlighter-rouge">git push origin preview</code>. You can read that command this way: <strong>git</strong> please <strong>push</strong> my changes to the <strong>origin</strong> aka the repository matching this local one and the <strong>preview</strong> branch in that remote repository. A typical result of the output of this cycle is as follows.</li>
</ol>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>âžœ  developer.concur.com git:<span class="o">(</span>preview<span class="o">)</span> git add <span class="nb">.</span>
âžœ  developer.concur.com git:<span class="o">(</span>preview<span class="o">)</span> âœ— git commit
<span class="o">[</span>preview 97db50cb] Adding the steps to work with forks.
 1 file changed, 37 insertions<span class="o">(</span>+<span class="o">)</span>
 create mode 100644 src/editing-with-a-repository-fork.md
 âžœ  developer.concur.com git:<span class="o">(</span>preview<span class="o">)</span> git push origin preview
Counting objects: 8, <span class="k">done</span><span class="nb">.</span>
Delta compression using up to 8 threads.
Compressing objects: 100% <span class="o">(</span>8/8<span class="o">)</span>, <span class="k">done</span><span class="nb">.</span>
Writing objects: 100% <span class="o">(</span>8/8<span class="o">)</span>, 2.31 KiB | 2.31 MiB/s, <span class="k">done</span><span class="nb">.</span>
Total 8 <span class="o">(</span>delta 5<span class="o">)</span>, reused 0 <span class="o">(</span>delta 0<span class="o">)</span>
remote: Resolving deltas: 100% <span class="o">(</span>5/5<span class="o">)</span>, completed with 2 <span class="nb">local </span>objects.
To github.com:retrosight/developer.concur.com.git
   cf7afef0..33c025d7  preview -&gt; preview
</code></pre></div></div>
<h3 id="vim-on-mac"><a name="vim-on-mac"></a>VIM on Mac</h3>

<ol>
  <li>Press the <strong>lowercase i</strong> key to change to â€˜Insertâ€™ mode.</li>
  <li>Type out your notes in the first line.</li>
  <li>Press the <strong>ESC</strong> key to exit out of â€˜Insertâ€™ mode.</li>
  <li>Type the following: <code class="language-plaintext highlighter-rouge">:wq</code></li>
  <li>Press the <strong>Enter</strong> key.</li>
</ol>

<h2 id="open-a-pull-request-for-the-base-repository"><a name="open-pull-request"></a>Open a pull request for the base repository</h2>

<blockquote>
  <p>These steps request the maintainer of the base repository accept your proposed changes and begin the review process for same.</p>
</blockquote>

<ol>
  <li>In the browser navigate to the home page for your fork repository.</li>
  <li>Click the <strong>New pull request</strong> button.</li>
  <li>Take note of the fork and branch and the arrow is pointing in the desired direction, from your fork (<code class="language-plaintext highlighter-rouge">head</code>) to the parent (<code class="language-plaintext highlighter-rouge">base</code>).</li>
  <li>Click the <strong>Create pull request</strong> button.</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[base fork: concur/developer.concur.com v ] [base: preview v ] &lt;- [head fork: retrosight/developer.concur.com v ] [compare: preview v ]
            |      |                               |           |              |          |                                  |
            org    repository                      branch      |              org        repository                         branch
                                                               direction
</code></pre></div></div>
:ET