I"(<h1 id="image-api-documentation">Image API Documentation v1.0</h1>

<blockquote>
  <p>Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu.</p>
</blockquote>

<p>The SAP Concur Image API allows clients to manage the receipt images attached to expense reports and the images attached to invoices. Clients can retrieve existing images by reportID, image ID, or invoiceID, and upload new images to a user, expense entry, report, or invoice.&lt;p&gt;The Image API supports the following image formats:&lt;/p&gt;&lt;p&gt;&lt;li&gt;<code class="language-plaintext highlighter-rouge">application/pdf</code>&lt;li&gt;<code class="language-plaintext highlighter-rouge">image/jpg</code>&lt;li&gt;<code class="language-plaintext highlighter-rouge">image/jpeg</code>&lt;li&gt;<code class="language-plaintext highlighter-rouge">image/png</code>&lt;/p&gt;&lt;p&gt;The maximum file size allowed is 10 MB.&lt;/p&gt;</p>

<p>Base URLs:</p>

<ul>
  <li><a href="https://www.concursolutions.com/api/v1.0">https://www.concursolutions.com/api/v1.0</a></li>
</ul>

<h1 id="authentication">Authentication</h1>

<ul>
  <li>
    <p>oAuth2 authentication. To use this API, you need to get OAuth client credentials (client ID, secret, and geolocation) from SAP Concur, and be authorized to use the relevant scope. Refer to the <a href="https://developer.concur.com/api-reference/authentication/getting-started.html">full authentication information</a> for more information.</p>

    <ul>
      <li>
        <p>Flow: clientCredentials</p>
      </li>
      <li>
        <p>Token URL = <a href="https://us.api.concursolutions.com/oauth2/v0">https://us.api.concursolutions.com/oauth2/v0</a></p>
      </li>
    </ul>
  </li>
</ul>

<h1 id="image-api-documentation-post-an-image">Post an image</h1>

<p>Add an expense report, expense entry, purchase request, or receipt image.</p>

<h2 id="addreceiptlineitemusingpost">addReceiptLineItemUsingPOST</h2>

<p><a id="opIdaddReceiptLineItemUsingPOST"></a></p>

<blockquote>
  <p>Code samples</p>
</blockquote>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># You can also use wget</span>
curl <span class="nt">-X</span> POST https://www.concursolutions.com/api/v1.0/image/v1.0/receipt <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Content-Type: multipart/form-data'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Accept: application/xml'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Authorization: Bearer {access-token}'</span>

</code></pre></div></div>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">POST</span> <span class="nn">https://www.concursolutions.com/api/v1.0/image/v1.0/receipt</span> <span class="k">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="p">:</span> <span class="s">www.concursolutions.com</span>
<span class="na">Content-Type</span><span class="p">:</span> <span class="s">multipart/form-data</span>
<span class="na">Accept</span><span class="p">:</span> <span class="s">application/xml</span>

</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">inputBody</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">{
  "Image File": "string"
}</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">multipart/form-data</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">Accept</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">application/xml</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">Authorization</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">Bearer {access-token}</span><span class="dl">'</span>
<span class="p">};</span>

<span class="nx">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://www.concursolutions.com/api/v1.0/image/v1.0/receipt</span><span class="dl">'</span><span class="p">,</span>
<span class="p">{</span>
  <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">body</span><span class="p">:</span> <span class="nx">inputBody</span><span class="p">,</span>
  <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">();</span>
<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">body</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
<span class="p">});</span>

</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rest-client'</span>
<span class="nb">require</span> <span class="s1">'json'</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'multipart/form-data'</span><span class="p">,</span>
  <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">result</span> <span class="o">=</span> <span class="no">RestClient</span><span class="p">.</span><span class="nf">post</span> <span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/receipt'</span><span class="p">,</span>
  <span class="ss">params: </span><span class="p">{</span>
  <span class="p">},</span> <span class="ss">headers: </span><span class="n">headers</span>

<span class="nb">p</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">'multipart/form-data'</span><span class="p">,</span>
  <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'application/xml'</span><span class="p">,</span>
  <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">post</span><span class="p">(</span><span class="s">'https://www.concursolutions.com/api/v1.0/image/v1.0/receipt'</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">())</span>

</code></pre></div></div>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="k">require</span> <span class="s1">'vendor/autoload.php'</span><span class="p">;</span>

<span class="nv">$headers</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'multipart/form-data'</span><span class="p">,</span>
    <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
    <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span><span class="p">,</span>
<span class="p">);</span>

<span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="err">\</span><span class="nf">GuzzleHttp\Client</span><span class="p">();</span>

<span class="c1">// Define array of request body.</span>
<span class="nv">$request_body</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="nf">request</span><span class="p">(</span><span class="s1">'POST'</span><span class="p">,</span><span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/receipt'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'headers'</span> <span class="o">=&gt;</span> <span class="nv">$headers</span><span class="p">,</span>
        <span class="s1">'json'</span> <span class="o">=&gt;</span> <span class="nv">$request_body</span><span class="p">,</span>
       <span class="p">)</span>
    <span class="p">);</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="nf">getBody</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">getContents</span><span class="p">());</span>
 <span class="p">}</span>
 <span class="k">catch</span> <span class="p">(</span><span class="err">\</span><span class="nc">GuzzleHttp\Exception\BadResponseException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// handle exception or api errors.</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="nf">getMessage</span><span class="p">());</span>
 <span class="p">}</span>

 <span class="c1">// ...</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">URL</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/receipt"</span><span class="o">);</span>
<span class="nc">HttpURLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpURLConnection</span><span class="o">)</span> <span class="n">obj</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
<span class="n">con</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">"POST"</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">responseCode</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">getResponseCode</span><span class="o">();</span>
<span class="nc">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span>
    <span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">con</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
<span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
<span class="nc">StringBuffer</span> <span class="n">response</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">();</span>
<span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">response</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>

</code></pre></div></div>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
       <span class="s">"bytes"</span>
       <span class="s">"net/http"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>

    <span class="n">headers</span> <span class="o">:=</span> <span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span><span class="p">{</span>
        <span class="s">"Content-Type"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"multipart/form-data"</span><span class="p">},</span>
        <span class="s">"Accept"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"application/xml"</span><span class="p">},</span>
        <span class="s">"Authorization"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"Bearer {access-token}"</span><span class="p">},</span>
    <span class="p">}</span>

    <span class="n">data</span> <span class="o">:=</span> <span class="n">bytes</span><span class="o">.</span><span class="n">NewBuffer</span><span class="p">([]</span><span class="kt">byte</span><span class="p">{</span><span class="n">jsonReq</span><span class="p">})</span>
    <span class="n">req</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">http</span><span class="o">.</span><span class="n">NewRequest</span><span class="p">(</span><span class="s">"POST"</span><span class="p">,</span> <span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/receipt"</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
    <span class="n">req</span><span class="o">.</span><span class="n">Header</span> <span class="o">=</span> <span class="n">headers</span>

    <span class="n">client</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="n">http</span><span class="o">.</span><span class="n">Client</span><span class="p">{}</span>
    <span class="n">resp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">client</span><span class="o">.</span><span class="n">Do</span><span class="p">(</span><span class="n">req</span><span class="p">)</span>
    <span class="c">// ...</span>
<span class="p">}</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">POST /image/v1.0/receipt</code></p>

<p><em>Post receipt image</em></p>

<p>Uploads a receipt image and associates it with the OAuth consumer. The user can view the image in the receipt management section of SAP Concur.</p>

<blockquote>
  <p>Body parameter</p>
</blockquote>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">Image File</span><span class="pi">:</span> <span class="s">string</span>

</code></pre></div></div>

<h3 id="addreceiptlineitemusingpost-parameters">Parameters</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>In</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>body</td>
      <td>body</td>
      <td>object</td>
      <td>true</td>
      <td>none</td>
    </tr>
    <tr>
      <td>» Image File</td>
      <td>body</td>
      <td>string(binary)</td>
      <td>true</td>
      <td>Receipt image to upload.</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Example responses</p>
</blockquote>

<blockquote>
  <p>200 Response</p>
</blockquote>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="nt">&lt;Image&gt;</span>
  <span class="nt">&lt;Id&gt;</span>string<span class="nt">&lt;/Id&gt;</span>
  <span class="nt">&lt;Url&gt;</span>string<span class="nt">&lt;/Url&gt;</span>
<span class="nt">&lt;/Image&gt;</span>
</code></pre></div></div>

<h3 id="addreceiptlineitemusingpost-responses">Responses</h3>

<table>
  <thead>
    <tr>
      <th>Status</th>
      <th>Meaning</th>
      <th>Description</th>
      <th>Schema</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>200</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.1">OK</a></td>
      <td>OK</td>
      <td><a href="#schemaimage">Image</a></td>
    </tr>
    <tr>
      <td>201</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.2">Created</a></td>
      <td>Created</td>
      <td>None</td>
    </tr>
    <tr>
      <td>400</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.1">Bad Request</a></td>
      <td>Invalid request</td>
      <td>None</td>
    </tr>
    <tr>
      <td>401</td>
      <td><a href="https://tools.ietf.org/html/rfc7235#section-3.1">Unauthorized</a></td>
      <td>Unauthorized</td>
      <td>None</td>
    </tr>
    <tr>
      <td>403</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.3">Forbidden</a></td>
      <td>Forbidden</td>
      <td>None</td>
    </tr>
    <tr>
      <td>404</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.4">Not Found</a></td>
      <td>Not Found</td>
      <td>None</td>
    </tr>
    <tr>
      <td>500</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.6.1">Internal Server Error</a></td>
      <td>Internal error</td>
      <td>None</td>
    </tr>
  </tbody>
</table>

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OAuth2
</aside>

<h2 id="addexpenseentrylineitemusingpost">addExpenseEntryLineItemUsingPOST</h2>

<p><a id="opIdaddExpenseEntryLineItemUsingPOST"></a></p>

<blockquote>
  <p>Code samples</p>
</blockquote>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># You can also use wget</span>
curl <span class="nt">-X</span> POST https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/<span class="o">{</span>entryId<span class="o">}</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Content-Type: multipart/form-data'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Accept: application/xml'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Authorization: Bearer {access-token}'</span>

</code></pre></div></div>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">POST</span> <span class="nn">https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}</span> <span class="k">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="p">:</span> <span class="s">www.concursolutions.com</span>
<span class="na">Content-Type</span><span class="p">:</span> <span class="s">multipart/form-data</span>
<span class="na">Accept</span><span class="p">:</span> <span class="s">application/xml</span>

</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">inputBody</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">{
  "Image File": "string"
}</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">multipart/form-data</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">Accept</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">application/xml</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">Authorization</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">Bearer {access-token}</span><span class="dl">'</span>
<span class="p">};</span>

<span class="nx">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}</span><span class="dl">'</span><span class="p">,</span>
<span class="p">{</span>
  <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">body</span><span class="p">:</span> <span class="nx">inputBody</span><span class="p">,</span>
  <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">();</span>
<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">body</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
<span class="p">});</span>

</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rest-client'</span>
<span class="nb">require</span> <span class="s1">'json'</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'multipart/form-data'</span><span class="p">,</span>
  <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">result</span> <span class="o">=</span> <span class="no">RestClient</span><span class="p">.</span><span class="nf">post</span> <span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}'</span><span class="p">,</span>
  <span class="ss">params: </span><span class="p">{</span>
  <span class="p">},</span> <span class="ss">headers: </span><span class="n">headers</span>

<span class="nb">p</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">'multipart/form-data'</span><span class="p">,</span>
  <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'application/xml'</span><span class="p">,</span>
  <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">post</span><span class="p">(</span><span class="s">'https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}'</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">())</span>

</code></pre></div></div>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="k">require</span> <span class="s1">'vendor/autoload.php'</span><span class="p">;</span>

<span class="nv">$headers</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'multipart/form-data'</span><span class="p">,</span>
    <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
    <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span><span class="p">,</span>
<span class="p">);</span>

<span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="err">\</span><span class="nf">GuzzleHttp\Client</span><span class="p">();</span>

<span class="c1">// Define array of request body.</span>
<span class="nv">$request_body</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="nf">request</span><span class="p">(</span><span class="s1">'POST'</span><span class="p">,</span><span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'headers'</span> <span class="o">=&gt;</span> <span class="nv">$headers</span><span class="p">,</span>
        <span class="s1">'json'</span> <span class="o">=&gt;</span> <span class="nv">$request_body</span><span class="p">,</span>
       <span class="p">)</span>
    <span class="p">);</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="nf">getBody</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">getContents</span><span class="p">());</span>
 <span class="p">}</span>
 <span class="k">catch</span> <span class="p">(</span><span class="err">\</span><span class="nc">GuzzleHttp\Exception\BadResponseException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// handle exception or api errors.</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="nf">getMessage</span><span class="p">());</span>
 <span class="p">}</span>

 <span class="c1">// ...</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">URL</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}"</span><span class="o">);</span>
<span class="nc">HttpURLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpURLConnection</span><span class="o">)</span> <span class="n">obj</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
<span class="n">con</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">"POST"</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">responseCode</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">getResponseCode</span><span class="o">();</span>
<span class="nc">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span>
    <span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">con</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
<span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
<span class="nc">StringBuffer</span> <span class="n">response</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">();</span>
<span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">response</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>

</code></pre></div></div>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
       <span class="s">"bytes"</span>
       <span class="s">"net/http"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>

    <span class="n">headers</span> <span class="o">:=</span> <span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span><span class="p">{</span>
        <span class="s">"Content-Type"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"multipart/form-data"</span><span class="p">},</span>
        <span class="s">"Accept"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"application/xml"</span><span class="p">},</span>
        <span class="s">"Authorization"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"Bearer {access-token}"</span><span class="p">},</span>
    <span class="p">}</span>

    <span class="n">data</span> <span class="o">:=</span> <span class="n">bytes</span><span class="o">.</span><span class="n">NewBuffer</span><span class="p">([]</span><span class="kt">byte</span><span class="p">{</span><span class="n">jsonReq</span><span class="p">})</span>
    <span class="n">req</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">http</span><span class="o">.</span><span class="n">NewRequest</span><span class="p">(</span><span class="s">"POST"</span><span class="p">,</span> <span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}"</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
    <span class="n">req</span><span class="o">.</span><span class="n">Header</span> <span class="o">=</span> <span class="n">headers</span>

    <span class="n">client</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="n">http</span><span class="o">.</span><span class="n">Client</span><span class="p">{}</span>
    <span class="n">resp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">client</span><span class="o">.</span><span class="n">Do</span><span class="p">(</span><span class="n">req</span><span class="p">)</span>
    <span class="c">// ...</span>
<span class="p">}</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">POST /image/v1.0/expenseentry/{entryId}</code></p>

<p><em>Post expense entry image</em></p>

<p>Uploads a receipt image and associates it with the expense entry that matches the supplied entry ID. Once an image is attached to the entry, you cannot append additional images.</p>

<blockquote>
  <p>Body parameter</p>
</blockquote>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">Image File</span><span class="pi">:</span> <span class="s">string</span>

</code></pre></div></div>

<h3 id="addexpenseentrylineitemusingpost-parameters">Parameters</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>In</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>entryId</td>
      <td>path</td>
      <td>string</td>
      <td>true</td>
      <td>The unique identifier of the image.</td>
    </tr>
    <tr>
      <td>body</td>
      <td>body</td>
      <td>object</td>
      <td>true</td>
      <td>none</td>
    </tr>
    <tr>
      <td>» Image File</td>
      <td>body</td>
      <td>string(binary)</td>
      <td>true</td>
      <td>Receipt Image to Upload</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Example responses</p>
</blockquote>

<blockquote>
  <p>200 Response</p>
</blockquote>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="nt">&lt;Image&gt;</span>
  <span class="nt">&lt;Id&gt;</span>string<span class="nt">&lt;/Id&gt;</span>
  <span class="nt">&lt;Url&gt;</span>string<span class="nt">&lt;/Url&gt;</span>
<span class="nt">&lt;/Image&gt;</span>
</code></pre></div></div>

<h3 id="addexpenseentrylineitemusingpost-responses">Responses</h3>

<table>
  <thead>
    <tr>
      <th>Status</th>
      <th>Meaning</th>
      <th>Description</th>
      <th>Schema</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>200</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.1">OK</a></td>
      <td>OK</td>
      <td><a href="#schemaimage">Image</a></td>
    </tr>
    <tr>
      <td>201</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.2">Created</a></td>
      <td>Created</td>
      <td>None</td>
    </tr>
    <tr>
      <td>400</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.1">Bad Request</a></td>
      <td>Invalid request</td>
      <td>None</td>
    </tr>
    <tr>
      <td>401</td>
      <td><a href="https://tools.ietf.org/html/rfc7235#section-3.1">Unauthorized</a></td>
      <td>Unauthorized</td>
      <td>None</td>
    </tr>
    <tr>
      <td>403</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.3">Forbidden</a></td>
      <td>Forbidden</td>
      <td>None</td>
    </tr>
    <tr>
      <td>404</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.4">Not Found</a></td>
      <td>Not Found</td>
      <td>None</td>
    </tr>
    <tr>
      <td>500</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.6.1">Internal Server Error</a></td>
      <td>Internal error</td>
      <td>None</td>
    </tr>
  </tbody>
</table>

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OAuth2
</aside>

<h2 id="addinvoiceimageusingpost">addInvoiceImageUsingPOST</h2>

<p><a id="opIdaddInvoiceImageUsingPOST"></a></p>

<blockquote>
  <p>Code samples</p>
</blockquote>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># You can also use wget</span>
curl <span class="nt">-X</span> POST https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/<span class="o">{</span>requestId<span class="o">}</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Content-Type: multipart/form-data'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Accept: application/xml'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Authorization: Bearer {access-token}'</span>

</code></pre></div></div>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">POST</span> <span class="nn">https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}</span> <span class="k">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="p">:</span> <span class="s">www.concursolutions.com</span>
<span class="na">Content-Type</span><span class="p">:</span> <span class="s">multipart/form-data</span>
<span class="na">Accept</span><span class="p">:</span> <span class="s">application/xml</span>

</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">inputBody</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">{
  "Image File": "string"
}</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">multipart/form-data</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">Accept</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">application/xml</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">Authorization</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">Bearer {access-token}</span><span class="dl">'</span>
<span class="p">};</span>

<span class="nx">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}</span><span class="dl">'</span><span class="p">,</span>
<span class="p">{</span>
  <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">body</span><span class="p">:</span> <span class="nx">inputBody</span><span class="p">,</span>
  <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">();</span>
<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">body</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
<span class="p">});</span>

</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rest-client'</span>
<span class="nb">require</span> <span class="s1">'json'</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'multipart/form-data'</span><span class="p">,</span>
  <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">result</span> <span class="o">=</span> <span class="no">RestClient</span><span class="p">.</span><span class="nf">post</span> <span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}'</span><span class="p">,</span>
  <span class="ss">params: </span><span class="p">{</span>
  <span class="p">},</span> <span class="ss">headers: </span><span class="n">headers</span>

<span class="nb">p</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">'multipart/form-data'</span><span class="p">,</span>
  <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'application/xml'</span><span class="p">,</span>
  <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">post</span><span class="p">(</span><span class="s">'https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}'</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">())</span>

</code></pre></div></div>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="k">require</span> <span class="s1">'vendor/autoload.php'</span><span class="p">;</span>

<span class="nv">$headers</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'multipart/form-data'</span><span class="p">,</span>
    <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
    <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span><span class="p">,</span>
<span class="p">);</span>

<span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="err">\</span><span class="nf">GuzzleHttp\Client</span><span class="p">();</span>

<span class="c1">// Define array of request body.</span>
<span class="nv">$request_body</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="nf">request</span><span class="p">(</span><span class="s1">'POST'</span><span class="p">,</span><span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'headers'</span> <span class="o">=&gt;</span> <span class="nv">$headers</span><span class="p">,</span>
        <span class="s1">'json'</span> <span class="o">=&gt;</span> <span class="nv">$request_body</span><span class="p">,</span>
       <span class="p">)</span>
    <span class="p">);</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="nf">getBody</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">getContents</span><span class="p">());</span>
 <span class="p">}</span>
 <span class="k">catch</span> <span class="p">(</span><span class="err">\</span><span class="nc">GuzzleHttp\Exception\BadResponseException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// handle exception or api errors.</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="nf">getMessage</span><span class="p">());</span>
 <span class="p">}</span>

 <span class="c1">// ...</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">URL</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}"</span><span class="o">);</span>
<span class="nc">HttpURLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpURLConnection</span><span class="o">)</span> <span class="n">obj</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
<span class="n">con</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">"POST"</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">responseCode</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">getResponseCode</span><span class="o">();</span>
<span class="nc">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span>
    <span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">con</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
<span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
<span class="nc">StringBuffer</span> <span class="n">response</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">();</span>
<span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">response</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>

</code></pre></div></div>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
       <span class="s">"bytes"</span>
       <span class="s">"net/http"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>

    <span class="n">headers</span> <span class="o">:=</span> <span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span><span class="p">{</span>
        <span class="s">"Content-Type"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"multipart/form-data"</span><span class="p">},</span>
        <span class="s">"Accept"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"application/xml"</span><span class="p">},</span>
        <span class="s">"Authorization"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"Bearer {access-token}"</span><span class="p">},</span>
    <span class="p">}</span>

    <span class="n">data</span> <span class="o">:=</span> <span class="n">bytes</span><span class="o">.</span><span class="n">NewBuffer</span><span class="p">([]</span><span class="kt">byte</span><span class="p">{</span><span class="n">jsonReq</span><span class="p">})</span>
    <span class="n">req</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">http</span><span class="o">.</span><span class="n">NewRequest</span><span class="p">(</span><span class="s">"POST"</span><span class="p">,</span> <span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}"</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
    <span class="n">req</span><span class="o">.</span><span class="n">Header</span> <span class="o">=</span> <span class="n">headers</span>

    <span class="n">client</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="n">http</span><span class="o">.</span><span class="n">Client</span><span class="p">{}</span>
    <span class="n">resp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">client</span><span class="o">.</span><span class="n">Do</span><span class="p">(</span><span class="n">req</span><span class="p">)</span>
    <span class="c">// ...</span>
<span class="p">}</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">POST /image/v1.0/invoice/{requestId}</code></p>

<p><em>Post invoice image</em></p>

<p>Uploads an invoice image and associates it with the invoice that matches the supplied request ID. Once an image is attached to the invoice, you cannot append additional images.</p>

<blockquote>
  <p>Body parameter</p>
</blockquote>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">Image File</span><span class="pi">:</span> <span class="s">string</span>

</code></pre></div></div>

<h3 id="addinvoiceimageusingpost-parameters">Parameters</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>In</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>requestId</td>
      <td>path</td>
      <td>string</td>
      <td>true</td>
      <td>The unique identifier of the image.</td>
    </tr>
    <tr>
      <td>body</td>
      <td>body</td>
      <td>object</td>
      <td>true</td>
      <td>none</td>
    </tr>
    <tr>
      <td>» Image File</td>
      <td>body</td>
      <td>string(binary)</td>
      <td>true</td>
      <td>Receipt image to upload</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Example responses</p>
</blockquote>

<blockquote>
  <p>200 Response</p>
</blockquote>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="nt">&lt;Image&gt;</span>
  <span class="nt">&lt;Id&gt;</span>string<span class="nt">&lt;/Id&gt;</span>
  <span class="nt">&lt;Url&gt;</span>string<span class="nt">&lt;/Url&gt;</span>
<span class="nt">&lt;/Image&gt;</span>
</code></pre></div></div>

<h3 id="addinvoiceimageusingpost-responses">Responses</h3>

<table>
  <thead>
    <tr>
      <th>Status</th>
      <th>Meaning</th>
      <th>Description</th>
      <th>Schema</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>200</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.1">OK</a></td>
      <td>OK</td>
      <td><a href="#schemaimage">Image</a></td>
    </tr>
    <tr>
      <td>201</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.2">Created</a></td>
      <td>Created</td>
      <td>None</td>
    </tr>
    <tr>
      <td>400</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.1">Bad Request</a></td>
      <td>Invalid request</td>
      <td>None</td>
    </tr>
    <tr>
      <td>401</td>
      <td><a href="https://tools.ietf.org/html/rfc7235#section-3.1">Unauthorized</a></td>
      <td>Unauthorized</td>
      <td>None</td>
    </tr>
    <tr>
      <td>403</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.3">Forbidden</a></td>
      <td>Forbidden</td>
      <td>None</td>
    </tr>
    <tr>
      <td>404</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.4">Not Found</a></td>
      <td>Not Found</td>
      <td>None</td>
    </tr>
    <tr>
      <td>500</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.6.1">Internal Server Error</a></td>
      <td>Internal error</td>
      <td>None</td>
    </tr>
  </tbody>
</table>

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OAuth2
</aside>

<h2 id="addreportimageusingpost">addReportImageUsingPOST</h2>

<p><a id="opIdaddReportImageUsingPOST"></a></p>

<blockquote>
  <p>Code samples</p>
</blockquote>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># You can also use wget</span>
curl <span class="nt">-X</span> POST https://www.concursolutions.com/api/v1.0/image/v1.0/report/<span class="o">{</span>reportId<span class="o">}</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Content-Type: multipart/form-data'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Accept: application/xml'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Authorization: Bearer {access-token}'</span>

</code></pre></div></div>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">POST</span> <span class="nn">https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}</span> <span class="k">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="p">:</span> <span class="s">www.concursolutions.com</span>
<span class="na">Content-Type</span><span class="p">:</span> <span class="s">multipart/form-data</span>
<span class="na">Accept</span><span class="p">:</span> <span class="s">application/xml</span>

</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">inputBody</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">{
  "Image File": "string"
}</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">'</span><span class="s1">Content-Type</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">multipart/form-data</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">Accept</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">application/xml</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">Authorization</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">Bearer {access-token}</span><span class="dl">'</span>
<span class="p">};</span>

<span class="nx">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}</span><span class="dl">'</span><span class="p">,</span>
<span class="p">{</span>
  <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">POST</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">body</span><span class="p">:</span> <span class="nx">inputBody</span><span class="p">,</span>
  <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">();</span>
<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">body</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
<span class="p">});</span>

</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rest-client'</span>
<span class="nb">require</span> <span class="s1">'json'</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'multipart/form-data'</span><span class="p">,</span>
  <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">result</span> <span class="o">=</span> <span class="no">RestClient</span><span class="p">.</span><span class="nf">post</span> <span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}'</span><span class="p">,</span>
  <span class="ss">params: </span><span class="p">{</span>
  <span class="p">},</span> <span class="ss">headers: </span><span class="n">headers</span>

<span class="nb">p</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">'multipart/form-data'</span><span class="p">,</span>
  <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'application/xml'</span><span class="p">,</span>
  <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">post</span><span class="p">(</span><span class="s">'https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}'</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">())</span>

</code></pre></div></div>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="k">require</span> <span class="s1">'vendor/autoload.php'</span><span class="p">;</span>

<span class="nv">$headers</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'multipart/form-data'</span><span class="p">,</span>
    <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
    <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span><span class="p">,</span>
<span class="p">);</span>

<span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="err">\</span><span class="nf">GuzzleHttp\Client</span><span class="p">();</span>

<span class="c1">// Define array of request body.</span>
<span class="nv">$request_body</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="nf">request</span><span class="p">(</span><span class="s1">'POST'</span><span class="p">,</span><span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'headers'</span> <span class="o">=&gt;</span> <span class="nv">$headers</span><span class="p">,</span>
        <span class="s1">'json'</span> <span class="o">=&gt;</span> <span class="nv">$request_body</span><span class="p">,</span>
       <span class="p">)</span>
    <span class="p">);</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="nf">getBody</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">getContents</span><span class="p">());</span>
 <span class="p">}</span>
 <span class="k">catch</span> <span class="p">(</span><span class="err">\</span><span class="nc">GuzzleHttp\Exception\BadResponseException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// handle exception or api errors.</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="nf">getMessage</span><span class="p">());</span>
 <span class="p">}</span>

 <span class="c1">// ...</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">URL</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}"</span><span class="o">);</span>
<span class="nc">HttpURLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpURLConnection</span><span class="o">)</span> <span class="n">obj</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
<span class="n">con</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">"POST"</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">responseCode</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">getResponseCode</span><span class="o">();</span>
<span class="nc">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span>
    <span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">con</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
<span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
<span class="nc">StringBuffer</span> <span class="n">response</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">();</span>
<span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">response</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>

</code></pre></div></div>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
       <span class="s">"bytes"</span>
       <span class="s">"net/http"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>

    <span class="n">headers</span> <span class="o">:=</span> <span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span><span class="p">{</span>
        <span class="s">"Content-Type"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"multipart/form-data"</span><span class="p">},</span>
        <span class="s">"Accept"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"application/xml"</span><span class="p">},</span>
        <span class="s">"Authorization"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"Bearer {access-token}"</span><span class="p">},</span>
    <span class="p">}</span>

    <span class="n">data</span> <span class="o">:=</span> <span class="n">bytes</span><span class="o">.</span><span class="n">NewBuffer</span><span class="p">([]</span><span class="kt">byte</span><span class="p">{</span><span class="n">jsonReq</span><span class="p">})</span>
    <span class="n">req</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">http</span><span class="o">.</span><span class="n">NewRequest</span><span class="p">(</span><span class="s">"POST"</span><span class="p">,</span> <span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}"</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
    <span class="n">req</span><span class="o">.</span><span class="n">Header</span> <span class="o">=</span> <span class="n">headers</span>

    <span class="n">client</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="n">http</span><span class="o">.</span><span class="n">Client</span><span class="p">{}</span>
    <span class="n">resp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">client</span><span class="o">.</span><span class="n">Do</span><span class="p">(</span><span class="n">req</span><span class="p">)</span>
    <span class="c">// ...</span>
<span class="p">}</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">POST /image/v1.0/report/{reportId}</code></p>

<p><em>Post expense report image</em></p>

<p>Uploads a receipt image and associates it with the report that matches the supplied report ID. If a report image already exists for the report, the new image will be appended to the existing image.</p>

<blockquote>
  <p>Body parameter</p>
</blockquote>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">Image File</span><span class="pi">:</span> <span class="s">string</span>

</code></pre></div></div>

<h3 id="addreportimageusingpost-parameters">Parameters</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>In</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>reportId</td>
      <td>path</td>
      <td>string</td>
      <td>true</td>
      <td>The unique identifier of the image.</td>
    </tr>
    <tr>
      <td>body</td>
      <td>body</td>
      <td>object</td>
      <td>true</td>
      <td>none</td>
    </tr>
    <tr>
      <td>» Image File</td>
      <td>body</td>
      <td>string(binary)</td>
      <td>true</td>
      <td>Receipt image to upload</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Example responses</p>
</blockquote>

<blockquote>
  <p>200 Response</p>
</blockquote>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="nt">&lt;Image&gt;</span>
  <span class="nt">&lt;Id&gt;</span>string<span class="nt">&lt;/Id&gt;</span>
  <span class="nt">&lt;Url&gt;</span>string<span class="nt">&lt;/Url&gt;</span>
<span class="nt">&lt;/Image&gt;</span>
</code></pre></div></div>

<h3 id="addreportimageusingpost-responses">Responses</h3>

<table>
  <thead>
    <tr>
      <th>Status</th>
      <th>Meaning</th>
      <th>Description</th>
      <th>Schema</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>200</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.1">OK</a></td>
      <td>OK</td>
      <td><a href="#schemaimage">Image</a></td>
    </tr>
    <tr>
      <td>201</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.2">Created</a></td>
      <td>Created</td>
      <td>None</td>
    </tr>
    <tr>
      <td>400</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.1">Bad Request</a></td>
      <td>Invalid request</td>
      <td>None</td>
    </tr>
    <tr>
      <td>401</td>
      <td><a href="https://tools.ietf.org/html/rfc7235#section-3.1">Unauthorized</a></td>
      <td>Unauthorized</td>
      <td>None</td>
    </tr>
    <tr>
      <td>403</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.3">Forbidden</a></td>
      <td>Forbidden</td>
      <td>None</td>
    </tr>
    <tr>
      <td>404</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.4">Not Found</a></td>
      <td>Not Found</td>
      <td>None</td>
    </tr>
    <tr>
      <td>500</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.6.1">Internal Server Error</a></td>
      <td>Internal error</td>
      <td>None</td>
    </tr>
  </tbody>
</table>

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OAuth2
</aside>

<h1 id="image-api-documentation-get-an-image-url">Get an image URL</h1>

<p>Retrieve image URLs. The URL is valid for 30 minutes after the request.</p>

<h2 id="getexpenseentryimageusingget">getExpenseEntryImageUsingGET</h2>

<p><a id="opIdgetExpenseEntryImageUsingGET"></a></p>

<blockquote>
  <p>Code samples</p>
</blockquote>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># You can also use wget</span>
curl <span class="nt">-X</span> GET https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/<span class="o">{</span>entryId<span class="o">}</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Accept: application/xml'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Authorization: Bearer {access-token}'</span>

</code></pre></div></div>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">GET</span> <span class="nn">https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}</span> <span class="k">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="p">:</span> <span class="s">www.concursolutions.com</span>
<span class="na">Accept</span><span class="p">:</span> <span class="s">application/xml</span>

</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kd">const</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">'</span><span class="s1">Accept</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">application/xml</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">Authorization</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">Bearer {access-token}</span><span class="dl">'</span>
<span class="p">};</span>

<span class="nx">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}</span><span class="dl">'</span><span class="p">,</span>
<span class="p">{</span>
  <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">GET</span><span class="dl">'</span><span class="p">,</span>

  <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">();</span>
<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">body</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
<span class="p">});</span>

</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rest-client'</span>
<span class="nb">require</span> <span class="s1">'json'</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">result</span> <span class="o">=</span> <span class="no">RestClient</span><span class="p">.</span><span class="nf">get</span> <span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}'</span><span class="p">,</span>
  <span class="ss">params: </span><span class="p">{</span>
  <span class="p">},</span> <span class="ss">headers: </span><span class="n">headers</span>

<span class="nb">p</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'application/xml'</span><span class="p">,</span>
  <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}'</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">())</span>

</code></pre></div></div>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="k">require</span> <span class="s1">'vendor/autoload.php'</span><span class="p">;</span>

<span class="nv">$headers</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
    <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span><span class="p">,</span>
<span class="p">);</span>

<span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="err">\</span><span class="nf">GuzzleHttp\Client</span><span class="p">();</span>

<span class="c1">// Define array of request body.</span>
<span class="nv">$request_body</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="nf">request</span><span class="p">(</span><span class="s1">'GET'</span><span class="p">,</span><span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'headers'</span> <span class="o">=&gt;</span> <span class="nv">$headers</span><span class="p">,</span>
        <span class="s1">'json'</span> <span class="o">=&gt;</span> <span class="nv">$request_body</span><span class="p">,</span>
       <span class="p">)</span>
    <span class="p">);</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="nf">getBody</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">getContents</span><span class="p">());</span>
 <span class="p">}</span>
 <span class="k">catch</span> <span class="p">(</span><span class="err">\</span><span class="nc">GuzzleHttp\Exception\BadResponseException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// handle exception or api errors.</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="nf">getMessage</span><span class="p">());</span>
 <span class="p">}</span>

 <span class="c1">// ...</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">URL</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}"</span><span class="o">);</span>
<span class="nc">HttpURLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpURLConnection</span><span class="o">)</span> <span class="n">obj</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
<span class="n">con</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">"GET"</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">responseCode</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">getResponseCode</span><span class="o">();</span>
<span class="nc">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span>
    <span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">con</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
<span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
<span class="nc">StringBuffer</span> <span class="n">response</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">();</span>
<span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">response</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>

</code></pre></div></div>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
       <span class="s">"bytes"</span>
       <span class="s">"net/http"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>

    <span class="n">headers</span> <span class="o">:=</span> <span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span><span class="p">{</span>
        <span class="s">"Accept"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"application/xml"</span><span class="p">},</span>
        <span class="s">"Authorization"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"Bearer {access-token}"</span><span class="p">},</span>
    <span class="p">}</span>

    <span class="n">data</span> <span class="o">:=</span> <span class="n">bytes</span><span class="o">.</span><span class="n">NewBuffer</span><span class="p">([]</span><span class="kt">byte</span><span class="p">{</span><span class="n">jsonReq</span><span class="p">})</span>
    <span class="n">req</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">http</span><span class="o">.</span><span class="n">NewRequest</span><span class="p">(</span><span class="s">"GET"</span><span class="p">,</span> <span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/expenseentry/{entryId}"</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
    <span class="n">req</span><span class="o">.</span><span class="n">Header</span> <span class="o">=</span> <span class="n">headers</span>

    <span class="n">client</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="n">http</span><span class="o">.</span><span class="n">Client</span><span class="p">{}</span>
    <span class="n">resp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">client</span><span class="o">.</span><span class="n">Do</span><span class="p">(</span><span class="n">req</span><span class="p">)</span>
    <span class="c">// ...</span>
<span class="p">}</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">GET /image/v1.0/expenseentry/{entryId}</code></p>

<p><em>Get an expense report entry image URL</em></p>

<p>Retrieve an expense report entry image URL.</p>

<h3 id="getexpenseentryimageusingget-parameters">Parameters</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>In</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>entryId</td>
      <td>path</td>
      <td>string</td>
      <td>true</td>
      <td>The unique identifier of the image.</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Example responses</p>
</blockquote>

<blockquote>
  <p>200 Response</p>
</blockquote>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="nt">&lt;Image&gt;</span>
  <span class="nt">&lt;Id&gt;</span>string<span class="nt">&lt;/Id&gt;</span>
  <span class="nt">&lt;Url&gt;</span>string<span class="nt">&lt;/Url&gt;</span>
<span class="nt">&lt;/Image&gt;</span>
</code></pre></div></div>

<h3 id="getexpenseentryimageusingget-responses">Responses</h3>

<table>
  <thead>
    <tr>
      <th>Status</th>
      <th>Meaning</th>
      <th>Description</th>
      <th>Schema</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>200</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.1">OK</a></td>
      <td>OK</td>
      <td><a href="#schemaimage">Image</a></td>
    </tr>
    <tr>
      <td>400</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.1">Bad Request</a></td>
      <td>Invalid request</td>
      <td>None</td>
    </tr>
    <tr>
      <td>401</td>
      <td><a href="https://tools.ietf.org/html/rfc7235#section-3.1">Unauthorized</a></td>
      <td>Unauthorized</td>
      <td>None</td>
    </tr>
    <tr>
      <td>403</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.3">Forbidden</a></td>
      <td>Forbidden</td>
      <td>None</td>
    </tr>
    <tr>
      <td>404</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.4">Not Found</a></td>
      <td>Not found</td>
      <td>None</td>
    </tr>
    <tr>
      <td>500</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.6.1">Internal Server Error</a></td>
      <td>Internal error</td>
      <td>None</td>
    </tr>
  </tbody>
</table>

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OAuth2
</aside>

<h2 id="getinvoiceimageusingget">getInvoiceImageUsingGET</h2>

<p><a id="opIdgetInvoiceImageUsingGET"></a></p>

<blockquote>
  <p>Code samples</p>
</blockquote>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># You can also use wget</span>
curl <span class="nt">-X</span> GET https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/<span class="o">{</span>requestId<span class="o">}</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Accept: application/xml'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Authorization: Bearer {access-token}'</span>

</code></pre></div></div>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">GET</span> <span class="nn">https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}</span> <span class="k">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="p">:</span> <span class="s">www.concursolutions.com</span>
<span class="na">Accept</span><span class="p">:</span> <span class="s">application/xml</span>

</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kd">const</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">'</span><span class="s1">Accept</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">application/xml</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">Authorization</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">Bearer {access-token}</span><span class="dl">'</span>
<span class="p">};</span>

<span class="nx">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}</span><span class="dl">'</span><span class="p">,</span>
<span class="p">{</span>
  <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">GET</span><span class="dl">'</span><span class="p">,</span>

  <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">();</span>
<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">body</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
<span class="p">});</span>

</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rest-client'</span>
<span class="nb">require</span> <span class="s1">'json'</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">result</span> <span class="o">=</span> <span class="no">RestClient</span><span class="p">.</span><span class="nf">get</span> <span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}'</span><span class="p">,</span>
  <span class="ss">params: </span><span class="p">{</span>
  <span class="p">},</span> <span class="ss">headers: </span><span class="n">headers</span>

<span class="nb">p</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'application/xml'</span><span class="p">,</span>
  <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}'</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">())</span>

</code></pre></div></div>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="k">require</span> <span class="s1">'vendor/autoload.php'</span><span class="p">;</span>

<span class="nv">$headers</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
    <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span><span class="p">,</span>
<span class="p">);</span>

<span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="err">\</span><span class="nf">GuzzleHttp\Client</span><span class="p">();</span>

<span class="c1">// Define array of request body.</span>
<span class="nv">$request_body</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="nf">request</span><span class="p">(</span><span class="s1">'GET'</span><span class="p">,</span><span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'headers'</span> <span class="o">=&gt;</span> <span class="nv">$headers</span><span class="p">,</span>
        <span class="s1">'json'</span> <span class="o">=&gt;</span> <span class="nv">$request_body</span><span class="p">,</span>
       <span class="p">)</span>
    <span class="p">);</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="nf">getBody</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">getContents</span><span class="p">());</span>
 <span class="p">}</span>
 <span class="k">catch</span> <span class="p">(</span><span class="err">\</span><span class="nc">GuzzleHttp\Exception\BadResponseException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// handle exception or api errors.</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="nf">getMessage</span><span class="p">());</span>
 <span class="p">}</span>

 <span class="c1">// ...</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">URL</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}"</span><span class="o">);</span>
<span class="nc">HttpURLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpURLConnection</span><span class="o">)</span> <span class="n">obj</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
<span class="n">con</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">"GET"</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">responseCode</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">getResponseCode</span><span class="o">();</span>
<span class="nc">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span>
    <span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">con</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
<span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
<span class="nc">StringBuffer</span> <span class="n">response</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">();</span>
<span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">response</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>

</code></pre></div></div>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
       <span class="s">"bytes"</span>
       <span class="s">"net/http"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>

    <span class="n">headers</span> <span class="o">:=</span> <span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span><span class="p">{</span>
        <span class="s">"Accept"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"application/xml"</span><span class="p">},</span>
        <span class="s">"Authorization"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"Bearer {access-token}"</span><span class="p">},</span>
    <span class="p">}</span>

    <span class="n">data</span> <span class="o">:=</span> <span class="n">bytes</span><span class="o">.</span><span class="n">NewBuffer</span><span class="p">([]</span><span class="kt">byte</span><span class="p">{</span><span class="n">jsonReq</span><span class="p">})</span>
    <span class="n">req</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">http</span><span class="o">.</span><span class="n">NewRequest</span><span class="p">(</span><span class="s">"GET"</span><span class="p">,</span> <span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/invoice/{requestId}"</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
    <span class="n">req</span><span class="o">.</span><span class="n">Header</span> <span class="o">=</span> <span class="n">headers</span>

    <span class="n">client</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="n">http</span><span class="o">.</span><span class="n">Client</span><span class="p">{}</span>
    <span class="n">resp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">client</span><span class="o">.</span><span class="n">Do</span><span class="p">(</span><span class="n">req</span><span class="p">)</span>
    <span class="c">// ...</span>
<span class="p">}</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">GET /image/v1.0/invoice/{requestId}</code></p>

<ul>
  <li>Get invoice image URL*</li>
</ul>

<p>Retrieve invoice image URL.</p>

<h3 id="getinvoiceimageusingget-parameters">Parameters</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>In</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>requestId</td>
      <td>path</td>
      <td>string</td>
      <td>true</td>
      <td>The unique identifier of the image.</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Example responses</p>
</blockquote>

<blockquote>
  <p>200 Response</p>
</blockquote>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="nt">&lt;Image&gt;</span>
  <span class="nt">&lt;Id&gt;</span>string<span class="nt">&lt;/Id&gt;</span>
  <span class="nt">&lt;Url&gt;</span>string<span class="nt">&lt;/Url&gt;</span>
<span class="nt">&lt;/Image&gt;</span>
</code></pre></div></div>

<h3 id="getinvoiceimageusingget-responses">Responses</h3>

<table>
  <thead>
    <tr>
      <th>Status</th>
      <th>Meaning</th>
      <th>Description</th>
      <th>Schema</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>200</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.1">OK</a></td>
      <td>OK</td>
      <td><a href="#schemaimage">Image</a></td>
    </tr>
    <tr>
      <td>400</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.1">Bad Request</a></td>
      <td>Invalid request</td>
      <td>None</td>
    </tr>
    <tr>
      <td>401</td>
      <td><a href="https://tools.ietf.org/html/rfc7235#section-3.1">Unauthorized</a></td>
      <td>Unauthorized</td>
      <td>None</td>
    </tr>
    <tr>
      <td>403</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.3">Forbidden</a></td>
      <td>Forbidden</td>
      <td>None</td>
    </tr>
    <tr>
      <td>404</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.4">Not Found</a></td>
      <td>Not found</td>
      <td>None</td>
    </tr>
    <tr>
      <td>500</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.6.1">Internal Server Error</a></td>
      <td>Internal error</td>
      <td>None</td>
    </tr>
  </tbody>
</table>

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OAuth2
</aside>

<h2 id="getreportentryimageusingget">getReportEntryImageUsingGET</h2>

<p><a id="opIdgetReportEntryImageUsingGET"></a></p>

<blockquote>
  <p>Code samples</p>
</blockquote>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># You can also use wget</span>
curl <span class="nt">-X</span> GET https://www.concursolutions.com/api/v1.0/image/v1.0/report/<span class="o">{</span>reportId<span class="o">}</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Accept: application/xml'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Authorization: Bearer {access-token}'</span>

</code></pre></div></div>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">GET</span> <span class="nn">https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}</span> <span class="k">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="p">:</span> <span class="s">www.concursolutions.com</span>
<span class="na">Accept</span><span class="p">:</span> <span class="s">application/xml</span>

</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kd">const</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">'</span><span class="s1">Accept</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">application/xml</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">Authorization</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">Bearer {access-token}</span><span class="dl">'</span>
<span class="p">};</span>

<span class="nx">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}</span><span class="dl">'</span><span class="p">,</span>
<span class="p">{</span>
  <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">GET</span><span class="dl">'</span><span class="p">,</span>

  <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">();</span>
<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">body</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
<span class="p">});</span>

</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rest-client'</span>
<span class="nb">require</span> <span class="s1">'json'</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">result</span> <span class="o">=</span> <span class="no">RestClient</span><span class="p">.</span><span class="nf">get</span> <span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}'</span><span class="p">,</span>
  <span class="ss">params: </span><span class="p">{</span>
  <span class="p">},</span> <span class="ss">headers: </span><span class="n">headers</span>

<span class="nb">p</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'application/xml'</span><span class="p">,</span>
  <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}'</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">())</span>

</code></pre></div></div>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="k">require</span> <span class="s1">'vendor/autoload.php'</span><span class="p">;</span>

<span class="nv">$headers</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
    <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span><span class="p">,</span>
<span class="p">);</span>

<span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="err">\</span><span class="nf">GuzzleHttp\Client</span><span class="p">();</span>

<span class="c1">// Define array of request body.</span>
<span class="nv">$request_body</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="nf">request</span><span class="p">(</span><span class="s1">'GET'</span><span class="p">,</span><span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'headers'</span> <span class="o">=&gt;</span> <span class="nv">$headers</span><span class="p">,</span>
        <span class="s1">'json'</span> <span class="o">=&gt;</span> <span class="nv">$request_body</span><span class="p">,</span>
       <span class="p">)</span>
    <span class="p">);</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="nf">getBody</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">getContents</span><span class="p">());</span>
 <span class="p">}</span>
 <span class="k">catch</span> <span class="p">(</span><span class="err">\</span><span class="nc">GuzzleHttp\Exception\BadResponseException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// handle exception or api errors.</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="nf">getMessage</span><span class="p">());</span>
 <span class="p">}</span>

 <span class="c1">// ...</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">URL</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}"</span><span class="o">);</span>
<span class="nc">HttpURLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpURLConnection</span><span class="o">)</span> <span class="n">obj</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
<span class="n">con</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">"GET"</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">responseCode</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">getResponseCode</span><span class="o">();</span>
<span class="nc">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span>
    <span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">con</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
<span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
<span class="nc">StringBuffer</span> <span class="n">response</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">();</span>
<span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">response</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>

</code></pre></div></div>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
       <span class="s">"bytes"</span>
       <span class="s">"net/http"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>

    <span class="n">headers</span> <span class="o">:=</span> <span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span><span class="p">{</span>
        <span class="s">"Accept"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"application/xml"</span><span class="p">},</span>
        <span class="s">"Authorization"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"Bearer {access-token}"</span><span class="p">},</span>
    <span class="p">}</span>

    <span class="n">data</span> <span class="o">:=</span> <span class="n">bytes</span><span class="o">.</span><span class="n">NewBuffer</span><span class="p">([]</span><span class="kt">byte</span><span class="p">{</span><span class="n">jsonReq</span><span class="p">})</span>
    <span class="n">req</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">http</span><span class="o">.</span><span class="n">NewRequest</span><span class="p">(</span><span class="s">"GET"</span><span class="p">,</span> <span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/report/{reportId}"</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
    <span class="n">req</span><span class="o">.</span><span class="n">Header</span> <span class="o">=</span> <span class="n">headers</span>

    <span class="n">client</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="n">http</span><span class="o">.</span><span class="n">Client</span><span class="p">{}</span>
    <span class="n">resp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">client</span><span class="o">.</span><span class="n">Do</span><span class="p">(</span><span class="n">req</span><span class="p">)</span>
    <span class="c">// ...</span>
<span class="p">}</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">GET /image/v1.0/report/{reportId}</code></p>

<p><em>Get report image URL</em></p>

<p>Retrieve expense report image URL.</p>

<h3 id="getreportentryimageusingget-parameters">Parameters</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>In</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>reportId</td>
      <td>path</td>
      <td>string</td>
      <td>true</td>
      <td>The unique identifier of the image.</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Example responses</p>
</blockquote>

<blockquote>
  <p>200 Response</p>
</blockquote>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="nt">&lt;Image&gt;</span>
  <span class="nt">&lt;Id&gt;</span>string<span class="nt">&lt;/Id&gt;</span>
  <span class="nt">&lt;Url&gt;</span>string<span class="nt">&lt;/Url&gt;</span>
<span class="nt">&lt;/Image&gt;</span>
</code></pre></div></div>

<h3 id="getreportentryimageusingget-responses">Responses</h3>

<table>
  <thead>
    <tr>
      <th>Status</th>
      <th>Meaning</th>
      <th>Description</th>
      <th>Schema</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>200</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.1">OK</a></td>
      <td>OK</td>
      <td><a href="#schemaimage">Image</a></td>
    </tr>
    <tr>
      <td>400</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.1">Bad Request</a></td>
      <td>Invalid request</td>
      <td>None</td>
    </tr>
    <tr>
      <td>401</td>
      <td><a href="https://tools.ietf.org/html/rfc7235#section-3.1">Unauthorized</a></td>
      <td>Unauthorized</td>
      <td>None</td>
    </tr>
    <tr>
      <td>403</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.3">Forbidden</a></td>
      <td>Forbidden</td>
      <td>None</td>
    </tr>
    <tr>
      <td>404</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.4">Not Found</a></td>
      <td>Not found</td>
      <td>None</td>
    </tr>
    <tr>
      <td>500</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.6.1">Internal Server Error</a></td>
      <td>Internal error</td>
      <td>None</td>
    </tr>
  </tbody>
</table>

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OAuth2
</aside>

<h2 id="getreceiptimageusingget">getReceiptImageUsingGET</h2>

<p><a id="opIdgetReceiptImageUsingGET"></a></p>

<blockquote>
  <p>Code samples</p>
</blockquote>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># You can also use wget</span>
curl <span class="nt">-X</span> GET https://www.concursolutions.com/api/v1.0/image/v1.0/receipt/<span class="o">{</span>imageId<span class="o">}</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Accept: application/xml'</span> <span class="se">\</span>
  <span class="nt">-H</span> <span class="s1">'Authorization: Bearer {access-token}'</span>

</code></pre></div></div>

<div class="language-http highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">GET</span> <span class="nn">https://www.concursolutions.com/api/v1.0/image/v1.0/receipt/{imageId}</span> <span class="k">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="p">:</span> <span class="s">www.concursolutions.com</span>
<span class="na">Accept</span><span class="p">:</span> <span class="s">application/xml</span>

</code></pre></div></div>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kd">const</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="dl">'</span><span class="s1">Accept</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">application/xml</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">Authorization</span><span class="dl">'</span><span class="p">:</span><span class="dl">'</span><span class="s1">Bearer {access-token}</span><span class="dl">'</span>
<span class="p">};</span>

<span class="nx">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://www.concursolutions.com/api/v1.0/image/v1.0/receipt/{imageId}</span><span class="dl">'</span><span class="p">,</span>
<span class="p">{</span>
  <span class="na">method</span><span class="p">:</span> <span class="dl">'</span><span class="s1">GET</span><span class="dl">'</span><span class="p">,</span>

  <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">();</span>
<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">body</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
<span class="p">});</span>

</code></pre></div></div>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'rest-client'</span>
<span class="nb">require</span> <span class="s1">'json'</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">result</span> <span class="o">=</span> <span class="no">RestClient</span><span class="p">.</span><span class="nf">get</span> <span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/receipt/{imageId}'</span><span class="p">,</span>
  <span class="ss">params: </span><span class="p">{</span>
  <span class="p">},</span> <span class="ss">headers: </span><span class="n">headers</span>

<span class="nb">p</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'application/xml'</span><span class="p">,</span>
  <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">'Bearer {access-token}'</span>
<span class="p">}</span>

<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'https://www.concursolutions.com/api/v1.0/image/v1.0/receipt/{imageId}'</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">())</span>

</code></pre></div></div>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="k">require</span> <span class="s1">'vendor/autoload.php'</span><span class="p">;</span>

<span class="nv">$headers</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'application/xml'</span><span class="p">,</span>
    <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'Bearer {access-token}'</span><span class="p">,</span>
<span class="p">);</span>

<span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="err">\</span><span class="nf">GuzzleHttp\Client</span><span class="p">();</span>

<span class="c1">// Define array of request body.</span>
<span class="nv">$request_body</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>

<span class="k">try</span> <span class="p">{</span>
    <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$client</span><span class="o">-&gt;</span><span class="nf">request</span><span class="p">(</span><span class="s1">'GET'</span><span class="p">,</span><span class="s1">'https://www.concursolutions.com/api/v1.0/image/v1.0/receipt/{imageId}'</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'headers'</span> <span class="o">=&gt;</span> <span class="nv">$headers</span><span class="p">,</span>
        <span class="s1">'json'</span> <span class="o">=&gt;</span> <span class="nv">$request_body</span><span class="p">,</span>
       <span class="p">)</span>
    <span class="p">);</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$response</span><span class="o">-&gt;</span><span class="nf">getBody</span><span class="p">()</span><span class="o">-&gt;</span><span class="nf">getContents</span><span class="p">());</span>
 <span class="p">}</span>
 <span class="k">catch</span> <span class="p">(</span><span class="err">\</span><span class="nc">GuzzleHttp\Exception\BadResponseException</span> <span class="nv">$e</span><span class="p">)</span> <span class="p">{</span>
    <span class="c1">// handle exception or api errors.</span>
    <span class="nb">print_r</span><span class="p">(</span><span class="nv">$e</span><span class="o">-&gt;</span><span class="nf">getMessage</span><span class="p">());</span>
 <span class="p">}</span>

 <span class="c1">// ...</span>

</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">URL</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="no">URL</span><span class="o">(</span><span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/receipt/{imageId}"</span><span class="o">);</span>
<span class="nc">HttpURLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="o">(</span><span class="nc">HttpURLConnection</span><span class="o">)</span> <span class="n">obj</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
<span class="n">con</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">"GET"</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">responseCode</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">getResponseCode</span><span class="o">();</span>
<span class="nc">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span>
    <span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">con</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
<span class="nc">String</span> <span class="n">inputLine</span><span class="o">;</span>
<span class="nc">StringBuffer</span> <span class="n">response</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuffer</span><span class="o">();</span>
<span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">response</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>

</code></pre></div></div>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">package</span> <span class="n">main</span>

<span class="k">import</span> <span class="p">(</span>
       <span class="s">"bytes"</span>
       <span class="s">"net/http"</span>
<span class="p">)</span>

<span class="k">func</span> <span class="n">main</span><span class="p">()</span> <span class="p">{</span>

    <span class="n">headers</span> <span class="o">:=</span> <span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span><span class="p">{</span>
        <span class="s">"Accept"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"application/xml"</span><span class="p">},</span>
        <span class="s">"Authorization"</span><span class="o">:</span> <span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"Bearer {access-token}"</span><span class="p">},</span>
    <span class="p">}</span>

    <span class="n">data</span> <span class="o">:=</span> <span class="n">bytes</span><span class="o">.</span><span class="n">NewBuffer</span><span class="p">([]</span><span class="kt">byte</span><span class="p">{</span><span class="n">jsonReq</span><span class="p">})</span>
    <span class="n">req</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">http</span><span class="o">.</span><span class="n">NewRequest</span><span class="p">(</span><span class="s">"GET"</span><span class="p">,</span> <span class="s">"https://www.concursolutions.com/api/v1.0/image/v1.0/receipt/{imageId}"</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
    <span class="n">req</span><span class="o">.</span><span class="n">Header</span> <span class="o">=</span> <span class="n">headers</span>

    <span class="n">client</span> <span class="o">:=</span> <span class="o">&amp;</span><span class="n">http</span><span class="o">.</span><span class="n">Client</span><span class="p">{}</span>
    <span class="n">resp</span><span class="p">,</span> <span class="n">err</span> <span class="o">:=</span> <span class="n">client</span><span class="o">.</span><span class="n">Do</span><span class="p">(</span><span class="n">req</span><span class="p">)</span>
    <span class="c">// ...</span>
<span class="p">}</span>

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">GET /image/v1.0/receipt/{imageId}</code></p>

<p><em>Get receipt image URL</em></p>

<p>Receive receipt image URL.</p>

<h3 id="getreceiptimageusingget-parameters">Parameters</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>In</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>imageId</td>
      <td>path</td>
      <td>string</td>
      <td>true</td>
      <td>The unique identifier of the image.</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Example responses</p>
</blockquote>

<blockquote>
  <p>200 Response</p>
</blockquote>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>
<span class="nt">&lt;Image&gt;</span>
  <span class="nt">&lt;Id&gt;</span>string<span class="nt">&lt;/Id&gt;</span>
  <span class="nt">&lt;Url&gt;</span>string<span class="nt">&lt;/Url&gt;</span>
<span class="nt">&lt;/Image&gt;</span>
</code></pre></div></div>

<h3 id="getreceiptimageusingget-responses">Responses</h3>

<table>
  <thead>
    <tr>
      <th>Status</th>
      <th>Meaning</th>
      <th>Description</th>
      <th>Schema</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>200</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.1">OK</a></td>
      <td>OK</td>
      <td><a href="#schemaimage">Image</a></td>
    </tr>
    <tr>
      <td>400</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.1">Bad Request</a></td>
      <td>Invalid request</td>
      <td>None</td>
    </tr>
    <tr>
      <td>401</td>
      <td><a href="https://tools.ietf.org/html/rfc7235#section-3.1">Unauthorized</a></td>
      <td>Unauthorized</td>
      <td>None</td>
    </tr>
    <tr>
      <td>403</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.3">Forbidden</a></td>
      <td>Forbidden</td>
      <td>None</td>
    </tr>
    <tr>
      <td>404</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.5.4">Not Found</a></td>
      <td>Not found</td>
      <td>None</td>
    </tr>
    <tr>
      <td>500</td>
      <td><a href="https://tools.ietf.org/html/rfc7231#section-6.6.1">Internal Server Error</a></td>
      <td>Internal error</td>
      <td>None</td>
    </tr>
  </tbody>
</table>

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
OAuth2
</aside>

<h1 id="schemas">Schemas</h1>

<h2 id="tocS_Image">Image</h2>

<p><a id="schemaimage"></a>
<a id="schema_Image"></a>
<a id="tocSimage"></a>
<a id="tocsimage"></a></p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"Id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"Url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="w">
</span><span class="p">}</span><span class="w">

</span></code></pre></div></div>

<p>Image</p>

<h3 id="properties">Properties</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Required</th>
      <th>Restrictions</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Id</td>
      <td>string</td>
      <td>false</td>
      <td>none</td>
      <td>The unique identifier of the image.</td>
    </tr>
    <tr>
      <td>Url</td>
      <td>string</td>
      <td>false</td>
      <td>none</td>
      <td>The URL to the image. Note that special characters will be XML-encoded. You will need to unencode any special characters before using the link. This element is empty when uploading images.</td>
    </tr>
  </tbody>
</table>

:ET